name: PoP CI

on:
  push:
    branches:
      - master

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  fe1-web:
    name: Fe1-Web
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        node-version: [12.x, 14.x]

    defaults:
      run:
        working-directory: ./fe1-web

    steps:
    - name: Setup repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of Sonar analysis

    - name: Setup node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup expo action
      uses: expo/expo-github-action@v5
      with:
        expo-version: 4.x

    - name: Setup node cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Setup npm dependencies
      run: |
        npm install

    - name: Check npm security issues
      run: |
        npm audit fix

    - name: Run lint
      if: ${{ always() }}  # execute even if previous steps failed
      run: |
        npm run eslint --if-present

    - name: Run test
      if: ${{ always() }}  # execute even if previous steps failed
      run: |
        npm run test --if-present

    - name: Run code analysis
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == '12.x' }}  # execute even if previous steps failed
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectBaseDir: fe1-web
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FE1 }}

    - name: Verify expo project health
      if: ${{ always() }}  # execute even if previous steps failed
      run: |
        expo doctor

    - name: Build expo web project
      run: |
        expo build:web


  be1-go:
    name: Be1-Go
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./be1-go

    steps:
    - name: Setup Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Setup repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of Sonar analysis

    - uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Setup dependencies
      run: |
        go mod download
        go get -v honnef.co/go/tools/cmd/staticcheck

    - name: Run go vet
      run: |
        go vet ./...

    - name: Run staticcheck
      if: ${{ always() }}  # execute even if previous steps failed
      run: |
        staticcheck ./...

    - name: Build
      if: ${{ always() }}  # execute even if previous steps failed
      run: |
        go build -v ./...

    - name: Test
      if: ${{ always() }}  # execute even if previous steps failed
      run: |
        go test -v ./...

    - name: Test with race detector
      if: ${{ always() }}  # execute even if previous steps failed
      run: |
        go test -race -v ./...

    - name: Run code analysis
      if: ${{ always() }}  # execute even if previous steps failed
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectBaseDir: be1-go
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BE1 }}


  fe2-android:
    name: Fe2-Android
    runs-on: macos-latest

    defaults:
      run:
        working-directory: ./fe2-android

    steps:
    - name: Setup repo
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of Sonar analysis

    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: |
        chmod +x ./gradlew

    - name: Build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FE2 }}
      shell: bash
      run: |
        # use grep to remove log spam due to jetifier transformation, c.f. https://stackoverflow.com/a/52353446
        # use set -o pipefail to keep error code from gradle, c.f. https://stackoverflow.com/a/37128767
        ( set -o pipefail; ./gradlew build sonarqube --info | grep -vE "^Transforming artifact(.*) with (Jetify|ExtractAar|Aar)Transform" )

    - name: Unit Tests
      run: |
        ./gradlew testDebugUnitTest

    - name: Android Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        arch: x86_64
        profile: pixel_2
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: ./gradlew connectedCheck
