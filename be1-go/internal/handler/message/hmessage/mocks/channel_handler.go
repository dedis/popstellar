// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	mmessage "popstellar/internal/handler/message/mmessage"

	mock "github.com/stretchr/testify/mock"
)

// ChannelHandler is an autogenerated mock type for the ChannelHandler type
type ChannelHandler struct {
	mock.Mock
}

// Handle provides a mock function with given fields: channelPath, msg
func (_m *ChannelHandler) Handle(channelPath string, msg mmessage.Message) error {
	ret := _m.Called(channelPath, msg)

	if len(ret) == 0 {
		panic("no return value specified for Handle")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, mmessage.Message) error); ok {
		r0 = rf(channelPath, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewChannelHandler creates a new instance of ChannelHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChannelHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChannelHandler {
	mock := &ChannelHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
