// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	message "popstellar/internal/handler/message/mmessage"

	mock "github.com/stretchr/testify/mock"
)

// DataHandler is an autogenerated mock type for the DataHandler type
type DataHandler struct {
	mock.Mock
}

// Handle provides a mock function with given fields: channelPath, msg
func (_m *DataHandler) Handle(channelPath string, msg message.Message) error {
	ret := _m.Called(channelPath, msg)

	if len(ret) == 0 {
		panic("no return value specified for Handle")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, message.Message) error); ok {
		r0 = rf(channelPath, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDataHandler creates a new instance of DataHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDataHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *DataHandler {
	mock := &DataHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
