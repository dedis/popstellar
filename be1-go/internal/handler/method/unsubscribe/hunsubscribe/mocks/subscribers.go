// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	socket "popstellar/internal/network/socket"

	mock "github.com/stretchr/testify/mock"
)

// Subscribers is an autogenerated mock type for the Subscribers type
type Subscribers struct {
	mock.Mock
}

// Unsubscribe provides a mock function with given fields: channel, _a1
func (_m *Subscribers) Unsubscribe(channel string, _a1 socket.Socket) error {
	ret := _m.Called(channel, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Unsubscribe")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, socket.Socket) error); ok {
		r0 = rf(channel, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSubscribers creates a new instance of Subscribers. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSubscribers(t interface {
	mock.TestingT
	Cleanup(func())
}) *Subscribers {
	mock := &Subscribers{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
