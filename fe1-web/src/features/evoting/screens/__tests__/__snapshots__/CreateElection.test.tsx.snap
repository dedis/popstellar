// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateElection renders correctly when name and question are empty 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={6}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <RCTScrollView
                          collapsable={false}
                          handlerTag={7}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          style={
                            {
                              "padding": 16,
                            }
                          }
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              Name
                            </Text>
                            <View
                              style={
                                {
                                  "flex": 1,
                                  "flexDirection": "row",
                                }
                              }
                            >
                              <TextInput
                                editable={true}
                                onChangeText={[Function]}
                                placeholder="Election Q1 2022"
                                placeholderTextColor="#8E8E8E"
                                style={
                                  [
                                    {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "lineHeight": 26,
                                      "marginBottom": 16,
                                      "textAlign": "left",
                                    },
                                    {
                                      "backgroundColor": "#fff",
                                      "borderColor": "#fff",
                                      "borderRadius": 8,
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "padding": 8,
                                      "width": 50,
                                    },
                                  ]
                                }
                                testID="election_name_selector"
                                value=""
                              />
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              Election Type
                            </Text>
                            <View
                              style={
                                {
                                  "backgroundColor": "#fff",
                                  "borderRadius": 8,
                                  "borderWidth": 0,
                                  "color": "#000",
                                  "fontSize": 20,
                                  "lineHeight": 26,
                                  "marginBottom": 16,
                                  "padding": 8,
                                  "textAlign": "left",
                                }
                              }
                            >
                              <RNCPicker
                                items={
                                  [
                                    {
                                      "label": "Open Ballot",
                                      "testID": undefined,
                                      "textColor": undefined,
                                      "value": "OPEN_BALLOT",
                                    },
                                    {
                                      "label": "Secret Ballot",
                                      "testID": undefined,
                                      "textColor": undefined,
                                      "value": "SECRET_BALLOT",
                                    },
                                  ]
                                }
                                numberOfLines={1}
                                onChange={[Function]}
                                selectedIndex={0}
                                style={
                                  [
                                    {
                                      "height": 216,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              Start time
                            </Text>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                [
                                  {
                                    "width": 142,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "height": 40,
                                      "justifyContent": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "borderColor": "#aaa",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={true}
                                    style={
                                      [
                                        {
                                          "color": "#333",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    05/Th/2021 01:00
                                  </Text>
                                </View>
                                <Image
                                  source={1}
                                  style={
                                    [
                                      {
                                        "height": 32,
                                        "marginLeft": 5,
                                        "marginRight": 5,
                                        "width": 32,
                                      },
                                      undefined,
                                    ]
                                  }
                                />
                                <Modal
                                  animationType="none"
                                  hardwareAccelerated={false}
                                  onRequestClose={[Function]}
                                  supportedOrientations={
                                    [
                                      "portrait",
                                      "portrait-upside-down",
                                      "landscape",
                                      "landscape-left",
                                      "landscape-right",
                                    ]
                                  }
                                  transparent={true}
                                  visible={false}
                                />
                              </View>
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              End time
                            </Text>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                [
                                  {
                                    "width": 142,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "height": 40,
                                      "justifyContent": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "borderColor": "#aaa",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={true}
                                    style={
                                      [
                                        {
                                          "color": "#333",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    05/Th/2021 02:00
                                  </Text>
                                </View>
                                <Image
                                  source={1}
                                  style={
                                    [
                                      {
                                        "height": 32,
                                        "marginLeft": 5,
                                        "marginRight": 5,
                                        "width": 32,
                                      },
                                      undefined,
                                    ]
                                  }
                                />
                                <Modal
                                  animationType="none"
                                  hardwareAccelerated={false}
                                  onRequestClose={[Function]}
                                  supportedOrientations={
                                    [
                                      "portrait",
                                      "portrait-upside-down",
                                      "landscape",
                                      "landscape-left",
                                      "landscape-right",
                                    ]
                                  }
                                  transparent={true}
                                  visible={false}
                                />
                              </View>
                            </View>
                            <View>
                              <Text
                                style={
                                  [
                                    {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "lineHeight": 26,
                                      "marginBottom": 16,
                                      "textAlign": "left",
                                    },
                                    {
                                      "fontWeight": "bold",
                                    },
                                  ]
                                }
                              >
                                Question
                                 
                                1
                              </Text>
                              <View
                                style={
                                  {
                                    "flex": 1,
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <TextInput
                                  editable={true}
                                  onChangeText={[Function]}
                                  placeholder="What is your favorite color?"
                                  placeholderTextColor="#8E8E8E"
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "left",
                                      },
                                      {
                                        "backgroundColor": "#fff",
                                        "borderColor": "#fff",
                                        "borderRadius": 8,
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "padding": 8,
                                        "width": 50,
                                      },
                                    ]
                                  }
                                  testID="question_selector_0"
                                  value=""
                                />
                              </View>
                              <Text
                                style={
                                  [
                                    {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "lineHeight": 26,
                                      "marginBottom": 16,
                                      "textAlign": "left",
                                    },
                                    {
                                      "fontWeight": "bold",
                                    },
                                  ]
                                }
                              >
                                Ballot Options
                              </Text>
                              <View>
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="question_0_ballots_option_0"
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                        "flexDirection": "row",
                                      }
                                    }
                                  >
                                    <TextInput
                                      editable={true}
                                      onChangeText={[Function]}
                                      placeholder="Blue"
                                      placeholderTextColor="#8E8E8E"
                                      style={
                                        [
                                          {
                                            "color": "#000",
                                            "fontSize": 20,
                                            "lineHeight": 26,
                                            "marginBottom": 16,
                                            "textAlign": "left",
                                          },
                                          {
                                            "backgroundColor": "#fff",
                                            "borderColor": "#fff",
                                            "borderRadius": 8,
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "padding": 8,
                                            "width": 50,
                                          },
                                        ]
                                      }
                                      testID="question_0_ballots_option_0_input"
                                      value=""
                                    />
                                  </View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      {
                                        "marginBottom": 16,
                                        "marginLeft": 16,
                                      }
                                    }
                                    testID="question_0_ballots_option_0_remove"
                                  >
                                    <RNGestureHandlerButton
                                      collapsable={false}
                                      delayLongPress={600}
                                      enabled={true}
                                      exclusive={true}
                                      handlerTag={8}
                                      handlerType="NativeViewGestureHandler"
                                      onGestureEvent={[Function]}
                                      onGestureHandlerEvent={[Function]}
                                      onGestureHandlerStateChange={[Function]}
                                      onHandlerStateChange={[Function]}
                                      rippleColor={0}
                                      touchSoundDisabled={false}
                                    >
                                      <View
                                        accessible={true}
                                        collapsable={false}
                                        style={
                                          {
                                            "opacity": 1,
                                          }
                                        }
                                      >
                                        <View>
                                          {"name":"ios-trash","size":25,"color":"#000"}
                                        </View>
                                      </View>
                                    </RNGestureHandlerButton>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "marginBottom": 16,
                                }
                              }
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                delayLongPress={600}
                                enabled={true}
                                exclusive={true}
                                handlerTag={9}
                                handlerType="NativeViewGestureHandler"
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                                touchSoundDisabled={false}
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  style={
                                    {
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "backgroundColor": "#3742fa",
                                          "borderColor": "#3742fa",
                                          "borderRadius": 8,
                                          "borderWidth": 1,
                                          "padding": 8,
                                        },
                                      ]
                                    }
                                  >
                                    <Text
                                      style={
                                        [
                                          {
                                            "color": "#000",
                                            "fontSize": 20,
                                            "lineHeight": 26,
                                            "textAlign": "left",
                                          },
                                          {
                                            "textAlign": "center",
                                          },
                                          {
                                            "color": "#fff",
                                          },
                                        ]
                                      }
                                    >
                                      Add Question
                                    </Text>
                                  </View>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "#e74c3c",
                                  },
                                ]
                              }
                            >
                              Name must not be empty.
                            </Text>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "#e74c3c",
                                  },
                                ]
                              }
                            >
                              All questions must have a title and at least 2 different ballot options.
                            </Text>
                            <Modal
                              hardwareAccelerated={false}
                              transparent={true}
                              visible={false}
                            />
                            <Modal
                              hardwareAccelerated={false}
                              onRequestClose={[Function]}
                              transparent={true}
                              visible={false}
                            />
                          </View>
                        </RCTScrollView>
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderColor": "rgb(216, 216, 216)",
                              "borderTopWidth": 1,
                              "flexDirection": "row",
                              "justifyContent": "space-around",
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={{}}
                            testID="election_confirm_selector"
                          >
                            <RNGestureHandlerButton
                              collapsable={false}
                              delayLongPress={600}
                              enabled={true}
                              exclusive={true}
                              handlerTag={10}
                              handlerType="NativeViewGestureHandler"
                              onGestureEvent={[Function]}
                              onGestureHandlerEvent={[Function]}
                              onGestureHandlerStateChange={[Function]}
                              onHandlerStateChange={[Function]}
                              rippleColor={0}
                              touchSoundDisabled={false}
                            >
                              <View
                                accessible={true}
                                collapsable={false}
                                style={
                                  {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "backgroundColor": "#3742fa",
                                        "borderColor": "#3742fa",
                                        "borderRadius": 8,
                                        "borderWidth": 1,
                                        "padding": 8,
                                      },
                                      {
                                        "backgroundColor": "#8E8E8E",
                                        "borderColor": "#8E8E8E",
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      [
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        },
                                        {
                                          "textAlign": "center",
                                        },
                                        {
                                          "color": "#fff",
                                        },
                                      ]
                                    }
                                  >
                                    Confirm
                                  </Text>
                                </View>
                              </View>
                            </RNGestureHandlerButton>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`CreateElection renders correctly when question is empty 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <RCTScrollView
                          collapsable={false}
                          handlerTag={2}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          style={
                            {
                              "padding": 16,
                            }
                          }
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              Name
                            </Text>
                            <View
                              style={
                                {
                                  "flex": 1,
                                  "flexDirection": "row",
                                }
                              }
                            >
                              <TextInput
                                editable={true}
                                onChangeText={[Function]}
                                placeholder="Election Q1 2022"
                                placeholderTextColor="#8E8E8E"
                                style={
                                  [
                                    {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "lineHeight": 26,
                                      "marginBottom": 16,
                                      "textAlign": "left",
                                    },
                                    {
                                      "backgroundColor": "#fff",
                                      "borderColor": "#fff",
                                      "borderRadius": 8,
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "padding": 8,
                                      "width": 50,
                                    },
                                  ]
                                }
                                testID="election_name_selector"
                                value="myElection"
                              />
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              Election Type
                            </Text>
                            <View
                              style={
                                {
                                  "backgroundColor": "#fff",
                                  "borderRadius": 8,
                                  "borderWidth": 0,
                                  "color": "#000",
                                  "fontSize": 20,
                                  "lineHeight": 26,
                                  "marginBottom": 16,
                                  "padding": 8,
                                  "textAlign": "left",
                                }
                              }
                            >
                              <RNCPicker
                                items={
                                  [
                                    {
                                      "label": "Open Ballot",
                                      "testID": undefined,
                                      "textColor": undefined,
                                      "value": "OPEN_BALLOT",
                                    },
                                    {
                                      "label": "Secret Ballot",
                                      "testID": undefined,
                                      "textColor": undefined,
                                      "value": "SECRET_BALLOT",
                                    },
                                  ]
                                }
                                numberOfLines={1}
                                onChange={[Function]}
                                selectedIndex={0}
                                style={
                                  [
                                    {
                                      "height": 216,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              Start time
                            </Text>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                [
                                  {
                                    "width": 142,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "height": 40,
                                      "justifyContent": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "borderColor": "#aaa",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={true}
                                    style={
                                      [
                                        {
                                          "color": "#333",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    05/Th/2021 01:00
                                  </Text>
                                </View>
                                <Image
                                  source={1}
                                  style={
                                    [
                                      {
                                        "height": 32,
                                        "marginLeft": 5,
                                        "marginRight": 5,
                                        "width": 32,
                                      },
                                      undefined,
                                    ]
                                  }
                                />
                                <Modal
                                  animationType="none"
                                  hardwareAccelerated={false}
                                  onRequestClose={[Function]}
                                  supportedOrientations={
                                    [
                                      "portrait",
                                      "portrait-upside-down",
                                      "landscape",
                                      "landscape-left",
                                      "landscape-right",
                                    ]
                                  }
                                  transparent={true}
                                  visible={false}
                                />
                              </View>
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "fontWeight": "bold",
                                  },
                                ]
                              }
                            >
                              End time
                            </Text>
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                [
                                  {
                                    "width": 142,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "height": 40,
                                      "justifyContent": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "borderColor": "#aaa",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={true}
                                    style={
                                      [
                                        {
                                          "color": "#333",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    05/Th/2021 02:00
                                  </Text>
                                </View>
                                <Image
                                  source={1}
                                  style={
                                    [
                                      {
                                        "height": 32,
                                        "marginLeft": 5,
                                        "marginRight": 5,
                                        "width": 32,
                                      },
                                      undefined,
                                    ]
                                  }
                                />
                                <Modal
                                  animationType="none"
                                  hardwareAccelerated={false}
                                  onRequestClose={[Function]}
                                  supportedOrientations={
                                    [
                                      "portrait",
                                      "portrait-upside-down",
                                      "landscape",
                                      "landscape-left",
                                      "landscape-right",
                                    ]
                                  }
                                  transparent={true}
                                  visible={false}
                                />
                              </View>
                            </View>
                            <View>
                              <Text
                                style={
                                  [
                                    {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "lineHeight": 26,
                                      "marginBottom": 16,
                                      "textAlign": "left",
                                    },
                                    {
                                      "fontWeight": "bold",
                                    },
                                  ]
                                }
                              >
                                Question
                                 
                                1
                              </Text>
                              <View
                                style={
                                  {
                                    "flex": 1,
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <TextInput
                                  editable={true}
                                  onChangeText={[Function]}
                                  placeholder="What is your favorite color?"
                                  placeholderTextColor="#8E8E8E"
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "left",
                                      },
                                      {
                                        "backgroundColor": "#fff",
                                        "borderColor": "#fff",
                                        "borderRadius": 8,
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "padding": 8,
                                        "width": 50,
                                      },
                                    ]
                                  }
                                  testID="question_selector_0"
                                  value=""
                                />
                              </View>
                              <Text
                                style={
                                  [
                                    {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "lineHeight": 26,
                                      "marginBottom": 16,
                                      "textAlign": "left",
                                    },
                                    {
                                      "fontWeight": "bold",
                                    },
                                  ]
                                }
                              >
                                Ballot Options
                              </Text>
                              <View>
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="question_0_ballots_option_0"
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                        "flexDirection": "row",
                                      }
                                    }
                                  >
                                    <TextInput
                                      editable={true}
                                      onChangeText={[Function]}
                                      placeholder="Blue"
                                      placeholderTextColor="#8E8E8E"
                                      style={
                                        [
                                          {
                                            "color": "#000",
                                            "fontSize": 20,
                                            "lineHeight": 26,
                                            "marginBottom": 16,
                                            "textAlign": "left",
                                          },
                                          {
                                            "backgroundColor": "#fff",
                                            "borderColor": "#fff",
                                            "borderRadius": 8,
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "padding": 8,
                                            "width": 50,
                                          },
                                        ]
                                      }
                                      testID="question_0_ballots_option_0_input"
                                      value=""
                                    />
                                  </View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      {
                                        "marginBottom": 16,
                                        "marginLeft": 16,
                                      }
                                    }
                                    testID="question_0_ballots_option_0_remove"
                                  >
                                    <RNGestureHandlerButton
                                      collapsable={false}
                                      delayLongPress={600}
                                      enabled={true}
                                      exclusive={true}
                                      handlerTag={3}
                                      handlerType="NativeViewGestureHandler"
                                      onGestureEvent={[Function]}
                                      onGestureHandlerEvent={[Function]}
                                      onGestureHandlerStateChange={[Function]}
                                      onHandlerStateChange={[Function]}
                                      rippleColor={0}
                                      touchSoundDisabled={false}
                                    >
                                      <View
                                        accessible={true}
                                        collapsable={false}
                                        style={
                                          {
                                            "opacity": 1,
                                          }
                                        }
                                      >
                                        <View>
                                          {"name":"ios-trash","size":25,"color":"#000"}
                                        </View>
                                      </View>
                                    </RNGestureHandlerButton>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "marginBottom": 16,
                                }
                              }
                            >
                              <RNGestureHandlerButton
                                collapsable={false}
                                delayLongPress={600}
                                enabled={true}
                                exclusive={true}
                                handlerTag={4}
                                handlerType="NativeViewGestureHandler"
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                                touchSoundDisabled={false}
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  style={
                                    {
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "backgroundColor": "#3742fa",
                                          "borderColor": "#3742fa",
                                          "borderRadius": 8,
                                          "borderWidth": 1,
                                          "padding": 8,
                                        },
                                      ]
                                    }
                                  >
                                    <Text
                                      style={
                                        [
                                          {
                                            "color": "#000",
                                            "fontSize": 20,
                                            "lineHeight": 26,
                                            "textAlign": "left",
                                          },
                                          {
                                            "textAlign": "center",
                                          },
                                          {
                                            "color": "#fff",
                                          },
                                        ]
                                      }
                                    >
                                      Add Question
                                    </Text>
                                  </View>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <Text
                              style={
                                [
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "#e74c3c",
                                  },
                                ]
                              }
                            >
                              All questions must have a title and at least 2 different ballot options.
                            </Text>
                            <Modal
                              hardwareAccelerated={false}
                              transparent={true}
                              visible={false}
                            />
                            <Modal
                              hardwareAccelerated={false}
                              onRequestClose={[Function]}
                              transparent={true}
                              visible={false}
                            />
                          </View>
                        </RCTScrollView>
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderColor": "rgb(216, 216, 216)",
                              "borderTopWidth": 1,
                              "flexDirection": "row",
                              "justifyContent": "space-around",
                              "paddingHorizontal": 16,
                              "paddingVertical": 16,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={{}}
                            testID="election_confirm_selector"
                          >
                            <RNGestureHandlerButton
                              collapsable={false}
                              delayLongPress={600}
                              enabled={true}
                              exclusive={true}
                              handlerTag={5}
                              handlerType="NativeViewGestureHandler"
                              onGestureEvent={[Function]}
                              onGestureHandlerEvent={[Function]}
                              onGestureHandlerStateChange={[Function]}
                              onHandlerStateChange={[Function]}
                              rippleColor={0}
                              touchSoundDisabled={false}
                            >
                              <View
                                accessible={true}
                                collapsable={false}
                                style={
                                  {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "backgroundColor": "#3742fa",
                                        "borderColor": "#3742fa",
                                        "borderRadius": 8,
                                        "borderWidth": 1,
                                        "padding": 8,
                                      },
                                      {
                                        "backgroundColor": "#8E8E8E",
                                        "borderColor": "#8E8E8E",
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      [
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        },
                                        {
                                          "textAlign": "center",
                                        },
                                        {
                                          "color": "#fff",
                                        },
                                      ]
                                    }
                                  >
                                    Confirm
                                  </Text>
                                </View>
                              </View>
                            </RNGestureHandlerButton>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
