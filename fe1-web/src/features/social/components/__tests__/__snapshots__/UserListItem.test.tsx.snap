// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserListItem renders correctly 1`] = `
<View
  style={
    Object {
      "borderColor": "gray",
      "borderTopWidth": 0,
      "borderWidth": 1,
      "flexDirection": "row",
      "padding": 10,
      "width": 600,
    }
  }
>
  <View
    style={
      Object {
        "width": 60,
      }
    }
  >
    ProfileIcon
  </View>
  <View
    style={
      Object {
        "flexDirection": "column",
        "width": 540,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 18,
          "fontWeight": "600",
        }
      }
    >
      PublicKey
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 16,
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={5}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            style={
              Object {
                "marginBottom": 16,
              }
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#3742fa",
                      "borderColor": "#3742fa",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      Object {
                        "textAlign": "center",
                      },
                      Object {
                        "color": "#fff",
                      },
                    ]
                  }
                >
                  Follow
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 16,
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={6}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            style={
              Object {
                "marginBottom": 16,
              }
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#3742fa",
                      "borderColor": "#3742fa",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                    Object {
                      "backgroundColor": "#8E8E8E",
                      "borderColor": "#8E8E8E",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      Object {
                        "textAlign": "center",
                      },
                      Object {
                        "color": "#fff",
                      },
                    ]
                  }
                >
                  Profile
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`UserListItem renders correctly after clicking on follow 1`] = `
<View
  style={
    Object {
      "borderColor": "gray",
      "borderTopWidth": 0,
      "borderWidth": 1,
      "flexDirection": "row",
      "padding": 10,
      "width": 600,
    }
  }
>
  <View
    style={
      Object {
        "width": 60,
      }
    }
  >
    ProfileIcon
  </View>
  <View
    style={
      Object {
        "flexDirection": "column",
        "width": 540,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 18,
          "fontWeight": "600",
        }
      }
    >
      PublicKey
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 16,
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={7}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            style={
              Object {
                "marginBottom": 16,
              }
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#3742fa",
                      "borderColor": "#3742fa",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                    Object {
                      "backgroundColor": "#8E8E8E",
                      "borderColor": "#8E8E8E",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      Object {
                        "textAlign": "center",
                      },
                      Object {
                        "color": "#fff",
                      },
                    ]
                  }
                >
                  Follow
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 16,
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={8}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            style={
              Object {
                "marginBottom": 16,
              }
            }
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#3742fa",
                      "borderColor": "#3742fa",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      Object {
                        "textAlign": "center",
                      },
                      Object {
                        "color": "#fff",
                      },
                    ]
                  }
                >
                  Profile
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
  </View>
</View>
`;
