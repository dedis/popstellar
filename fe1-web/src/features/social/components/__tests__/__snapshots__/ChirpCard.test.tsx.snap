// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChirpCard for deletion render correct for a deleted chirp 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={12}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "backgroundColor": "#fff",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderBottomWidth": 0.5,
                              "borderColor": "#bcbbc1",
                              "flexDirection": "row",
                              "padding": 14,
                            }
                          }
                          testID="RNE__LISTITEM__padView"
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <RNGestureHandlerButton
                              collapsable={false}
                              delayLongPress={600}
                              enabled={true}
                              exclusive={true}
                              handlerTag={13}
                              handlerType="NativeViewGestureHandler"
                              onGestureEvent={[Function]}
                              onGestureHandlerEvent={[Function]}
                              onGestureHandlerStateChange={[Function]}
                              onHandlerStateChange={[Function]}
                              rippleColor={0}
                              touchSoundDisabled={false}
                            >
                              <View
                                accessible={true}
                                collapsable={false}
                                style={
                                  {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "marginRight": 16,
                                      },
                                      {
                                        "alignSelf": "flex-start",
                                      },
                                    ]
                                  }
                                >
                                  ProfileIcon
                                  <Text
                                    numberOfLines={1}
                                    selectable={true}
                                    style={
                                      [
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        },
                                        {
                                          "fontSize": 16,
                                          "lineHeight": 20,
                                        },
                                        {
                                          "color": "#8E8E8E",
                                        },
                                        {
                                          "textAlign": "center",
                                        },
                                        {
                                          "fontFamily": "Courier New",
                                        },
                                        {
                                          "marginTop": 8,
                                        },
                                      ]
                                    }
                                  >
                                    Joke
                                  </Text>
                                </View>
                              </View>
                            </RNGestureHandlerButton>
                          </View>
                          <View
                            style={
                              {
                                "paddingLeft": 16,
                              }
                            }
                          />
                          <View
                            style={
                              [
                                {
                                  "alignItems": "flex-start",
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                                undefined,
                              ]
                            }
                            theme={
                              {
                                "colors": {
                                  "background": "#ffffff",
                                  "black": "#242424",
                                  "disabled": "hsl(208, 8%, 90%)",
                                  "divider": "#bcbbc1",
                                  "error": "#ff190c",
                                  "grey0": "#393e42",
                                  "grey1": "#43484d",
                                  "grey2": "#5e6977",
                                  "grey3": "#86939e",
                                  "grey4": "#bdc6cf",
                                  "grey5": "#e1e8ee",
                                  "greyOutline": "#bbb",
                                  "platform": {
                                    "android": {
                                      "error": "#f44336",
                                      "grey": "rgba(0, 0, 0, 0.54)",
                                      "primary": "#2196f3",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#9C27B0",
                                      "success": "#4caf50",
                                      "warning": "#ffeb3b",
                                    },
                                    "default": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "ios": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "web": {
                                      "error": "#ff190c",
                                      "grey": "#393e42",
                                      "primary": "#2089dc",
                                      "searchBg": "#303337",
                                      "secondary": "#ca71eb",
                                      "success": "#52c41a",
                                      "warning": "#faad14",
                                    },
                                  },
                                  "primary": "#2089dc",
                                  "searchBg": "#303337",
                                  "secondary": "#ad1457",
                                  "success": "#52c41a",
                                  "warning": "#faad14",
                                  "white": "#ffffff",
                                },
                                "spacing": {
                                  "lg": 12,
                                  "md": 8,
                                  "sm": 4,
                                  "xl": 24,
                                  "xs": 2,
                                },
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "backgroundColor": "transparent",
                                  "color": "#242424",
                                  "fontSize": 15,
                                }
                              }
                              testID="listItemTitle"
                            >
                              <Text
                                style={
                                  [
                                    {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "lineHeight": 26,
                                      "textAlign": "left",
                                    },
                                    {
                                      "color": "#8E8E8E",
                                    },
                                  ]
                                }
                              >
                                This chirp was deleted
                              </Text>
                            </Text>
                            <View
                              style={
                                {
                                  "flexDirection": "row",
                                  "flexWrap": "wrap",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "flexGrow": 1,
                                  }
                                }
                              />
                              <View
                                style={
                                  {
                                    "alignSelf": "flex-end",
                                    "marginLeft": "auto",
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                    ]
                                  }
                                >
                                  <time
                                    dateTime="2020-11-29T16:16:40.000Z"
                                    title="2020-11-29 16:16"
                                  >
                                    5 months ago
                                  </time>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ChirpCard for deletion renders correctly for non-sender 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={7}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "backgroundColor": "#fff",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderBottomWidth": 0.5,
                              "borderColor": "#bcbbc1",
                              "flexDirection": "row",
                              "padding": 14,
                            }
                          }
                          testID="RNE__LISTITEM__padView"
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <RNGestureHandlerButton
                              collapsable={false}
                              delayLongPress={600}
                              enabled={true}
                              exclusive={true}
                              handlerTag={8}
                              handlerType="NativeViewGestureHandler"
                              onGestureEvent={[Function]}
                              onGestureHandlerEvent={[Function]}
                              onGestureHandlerStateChange={[Function]}
                              onHandlerStateChange={[Function]}
                              rippleColor={0}
                              touchSoundDisabled={false}
                            >
                              <View
                                accessible={true}
                                collapsable={false}
                                style={
                                  {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "marginRight": 16,
                                      },
                                      {
                                        "alignSelf": "flex-start",
                                      },
                                    ]
                                  }
                                >
                                  ProfileIcon
                                  <Text
                                    numberOfLines={1}
                                    selectable={true}
                                    style={
                                      [
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        },
                                        {
                                          "fontSize": 16,
                                          "lineHeight": 20,
                                        },
                                        {
                                          "color": "#8E8E8E",
                                        },
                                        {
                                          "textAlign": "center",
                                        },
                                        {
                                          "fontFamily": "Courier New",
                                        },
                                        {
                                          "marginTop": 8,
                                        },
                                      ]
                                    }
                                  >
                                    Doug
                                  </Text>
                                </View>
                              </View>
                            </RNGestureHandlerButton>
                          </View>
                          <View
                            style={
                              {
                                "paddingLeft": 16,
                              }
                            }
                          />
                          <View
                            style={
                              [
                                {
                                  "alignItems": "flex-start",
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                                undefined,
                              ]
                            }
                            theme={
                              {
                                "colors": {
                                  "background": "#ffffff",
                                  "black": "#242424",
                                  "disabled": "hsl(208, 8%, 90%)",
                                  "divider": "#bcbbc1",
                                  "error": "#ff190c",
                                  "grey0": "#393e42",
                                  "grey1": "#43484d",
                                  "grey2": "#5e6977",
                                  "grey3": "#86939e",
                                  "grey4": "#bdc6cf",
                                  "grey5": "#e1e8ee",
                                  "greyOutline": "#bbb",
                                  "platform": {
                                    "android": {
                                      "error": "#f44336",
                                      "grey": "rgba(0, 0, 0, 0.54)",
                                      "primary": "#2196f3",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#9C27B0",
                                      "success": "#4caf50",
                                      "warning": "#ffeb3b",
                                    },
                                    "default": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "ios": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "web": {
                                      "error": "#ff190c",
                                      "grey": "#393e42",
                                      "primary": "#2089dc",
                                      "searchBg": "#303337",
                                      "secondary": "#ca71eb",
                                      "success": "#52c41a",
                                      "warning": "#faad14",
                                    },
                                  },
                                  "primary": "#2089dc",
                                  "searchBg": "#303337",
                                  "secondary": "#ad1457",
                                  "success": "#52c41a",
                                  "warning": "#faad14",
                                  "white": "#ffffff",
                                },
                                "spacing": {
                                  "lg": 12,
                                  "md": 8,
                                  "sm": 4,
                                  "xl": 24,
                                  "xs": 2,
                                },
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "backgroundColor": "transparent",
                                  "color": "#242424",
                                  "fontSize": 15,
                                }
                              }
                              testID="listItemTitle"
                            >
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Don't delete me!
                              </Text>
                            </Text>
                            <View
                              style={
                                {
                                  "flexDirection": "row",
                                  "flexWrap": "wrap",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-up"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={9}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-up-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-down"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={10}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-down-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="heart"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={11}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"heart","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "flexGrow": 1,
                                  }
                                }
                              />
                              <View
                                style={
                                  {
                                    "alignSelf": "flex-end",
                                    "marginLeft": "auto",
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                    ]
                                  }
                                >
                                  <time
                                    dateTime="2020-11-29T16:16:40.000Z"
                                    title="2020-11-29 16:16"
                                  >
                                    5 months ago
                                  </time>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ChirpCard for deletion renders correctly for sender 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "backgroundColor": "#fff",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderBottomWidth": 0.5,
                              "borderColor": "#bcbbc1",
                              "flexDirection": "row",
                              "padding": 14,
                            }
                          }
                          testID="RNE__LISTITEM__padView"
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <RNGestureHandlerButton
                              collapsable={false}
                              delayLongPress={600}
                              enabled={true}
                              exclusive={true}
                              handlerTag={2}
                              handlerType="NativeViewGestureHandler"
                              onGestureEvent={[Function]}
                              onGestureHandlerEvent={[Function]}
                              onGestureHandlerStateChange={[Function]}
                              onHandlerStateChange={[Function]}
                              rippleColor={0}
                              touchSoundDisabled={false}
                            >
                              <View
                                accessible={true}
                                collapsable={false}
                                style={
                                  {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "marginRight": 16,
                                      },
                                      {
                                        "alignSelf": "flex-start",
                                      },
                                    ]
                                  }
                                >
                                  ProfileIcon
                                  <Text
                                    numberOfLines={1}
                                    selectable={true}
                                    style={
                                      [
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        },
                                        {
                                          "fontSize": 16,
                                          "lineHeight": 20,
                                        },
                                        {
                                          "color": "#8E8E8E",
                                        },
                                        {
                                          "textAlign": "center",
                                        },
                                        {
                                          "fontFamily": "Courier New",
                                        },
                                        {
                                          "marginTop": 8,
                                        },
                                      ]
                                    }
                                  >
                                    Doug
                                  </Text>
                                </View>
                              </View>
                            </RNGestureHandlerButton>
                          </View>
                          <View
                            style={
                              {
                                "paddingLeft": 16,
                              }
                            }
                          />
                          <View
                            style={
                              [
                                {
                                  "alignItems": "flex-start",
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                                undefined,
                              ]
                            }
                            theme={
                              {
                                "colors": {
                                  "background": "#ffffff",
                                  "black": "#242424",
                                  "disabled": "hsl(208, 8%, 90%)",
                                  "divider": "#bcbbc1",
                                  "error": "#ff190c",
                                  "grey0": "#393e42",
                                  "grey1": "#43484d",
                                  "grey2": "#5e6977",
                                  "grey3": "#86939e",
                                  "grey4": "#bdc6cf",
                                  "grey5": "#e1e8ee",
                                  "greyOutline": "#bbb",
                                  "platform": {
                                    "android": {
                                      "error": "#f44336",
                                      "grey": "rgba(0, 0, 0, 0.54)",
                                      "primary": "#2196f3",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#9C27B0",
                                      "success": "#4caf50",
                                      "warning": "#ffeb3b",
                                    },
                                    "default": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "ios": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "web": {
                                      "error": "#ff190c",
                                      "grey": "#393e42",
                                      "primary": "#2089dc",
                                      "searchBg": "#303337",
                                      "secondary": "#ca71eb",
                                      "success": "#52c41a",
                                      "warning": "#faad14",
                                    },
                                  },
                                  "primary": "#2089dc",
                                  "searchBg": "#303337",
                                  "secondary": "#ad1457",
                                  "success": "#52c41a",
                                  "warning": "#faad14",
                                  "white": "#ffffff",
                                },
                                "spacing": {
                                  "lg": 12,
                                  "md": 8,
                                  "sm": 4,
                                  "xl": 24,
                                  "xs": 2,
                                },
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "backgroundColor": "transparent",
                                  "color": "#242424",
                                  "fontSize": 15,
                                }
                              }
                              testID="listItemTitle"
                            >
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Don't delete me!
                              </Text>
                            </Text>
                            <View
                              style={
                                {
                                  "flexDirection": "row",
                                  "flexWrap": "wrap",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-up"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={3}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-up-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-down"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={4}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-down-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="heart"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={5}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"heart","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="delete_chirp"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={6}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"ios-trash","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Modal
                                  hardwareAccelerated={false}
                                  onRequestClose={[Function]}
                                  transparent={true}
                                  visible={false}
                                />
                              </View>
                              <View
                                style={
                                  {
                                    "flexGrow": 1,
                                  }
                                }
                              />
                              <View
                                style={
                                  {
                                    "alignSelf": "flex-end",
                                    "marginLeft": "auto",
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                    ]
                                  }
                                >
                                  <time
                                    dateTime="2020-11-29T16:16:40.000Z"
                                    title="2020-11-29 16:16"
                                  >
                                    5 months ago
                                  </time>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ChirpCard for reaction renders correctly with reaction 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={24}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "backgroundColor": "#fff",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderBottomWidth": 0.5,
                              "borderColor": "#bcbbc1",
                              "flexDirection": "row",
                              "padding": 14,
                            }
                          }
                          testID="RNE__LISTITEM__padView"
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <RNGestureHandlerButton
                              collapsable={false}
                              delayLongPress={600}
                              enabled={true}
                              exclusive={true}
                              handlerTag={25}
                              handlerType="NativeViewGestureHandler"
                              onGestureEvent={[Function]}
                              onGestureHandlerEvent={[Function]}
                              onGestureHandlerStateChange={[Function]}
                              onHandlerStateChange={[Function]}
                              rippleColor={0}
                              touchSoundDisabled={false}
                            >
                              <View
                                accessible={true}
                                collapsable={false}
                                style={
                                  {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "marginRight": 16,
                                      },
                                      {
                                        "alignSelf": "flex-start",
                                      },
                                    ]
                                  }
                                >
                                  ProfileIcon
                                  <Text
                                    numberOfLines={1}
                                    selectable={true}
                                    style={
                                      [
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        },
                                        {
                                          "fontSize": 16,
                                          "lineHeight": 20,
                                        },
                                        {
                                          "color": "#8E8E8E",
                                        },
                                        {
                                          "textAlign": "center",
                                        },
                                        {
                                          "fontFamily": "Courier New",
                                        },
                                        {
                                          "marginTop": 8,
                                        },
                                      ]
                                    }
                                  >
                                    Doug
                                  </Text>
                                </View>
                              </View>
                            </RNGestureHandlerButton>
                          </View>
                          <View
                            style={
                              {
                                "paddingLeft": 16,
                              }
                            }
                          />
                          <View
                            style={
                              [
                                {
                                  "alignItems": "flex-start",
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                                undefined,
                              ]
                            }
                            theme={
                              {
                                "colors": {
                                  "background": "#ffffff",
                                  "black": "#242424",
                                  "disabled": "hsl(208, 8%, 90%)",
                                  "divider": "#bcbbc1",
                                  "error": "#ff190c",
                                  "grey0": "#393e42",
                                  "grey1": "#43484d",
                                  "grey2": "#5e6977",
                                  "grey3": "#86939e",
                                  "grey4": "#bdc6cf",
                                  "grey5": "#e1e8ee",
                                  "greyOutline": "#bbb",
                                  "platform": {
                                    "android": {
                                      "error": "#f44336",
                                      "grey": "rgba(0, 0, 0, 0.54)",
                                      "primary": "#2196f3",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#9C27B0",
                                      "success": "#4caf50",
                                      "warning": "#ffeb3b",
                                    },
                                    "default": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "ios": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "web": {
                                      "error": "#ff190c",
                                      "grey": "#393e42",
                                      "primary": "#2089dc",
                                      "searchBg": "#303337",
                                      "secondary": "#ca71eb",
                                      "success": "#52c41a",
                                      "warning": "#faad14",
                                    },
                                  },
                                  "primary": "#2089dc",
                                  "searchBg": "#303337",
                                  "secondary": "#ad1457",
                                  "success": "#52c41a",
                                  "warning": "#faad14",
                                  "white": "#ffffff",
                                },
                                "spacing": {
                                  "lg": 12,
                                  "md": 8,
                                  "sm": 4,
                                  "xl": 24,
                                  "xs": 2,
                                },
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "backgroundColor": "transparent",
                                  "color": "#242424",
                                  "fontSize": 15,
                                }
                              }
                              testID="listItemTitle"
                            >
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Don't delete me!
                              </Text>
                            </Text>
                            <View
                              style={
                                {
                                  "flexDirection": "row",
                                  "flexWrap": "wrap",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-up"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={26}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-up-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  1
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-down"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={27}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-down-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="heart"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={28}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"heart","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "flexGrow": 1,
                                  }
                                }
                              />
                              <View
                                style={
                                  {
                                    "alignSelf": "flex-end",
                                    "marginLeft": "auto",
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                    ]
                                  }
                                >
                                  <time
                                    dateTime="2020-11-29T16:16:40.000Z"
                                    title="2020-11-29 16:16"
                                  >
                                    5 months ago
                                  </time>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ChirpCard for reaction renders correctly without reaction 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={29}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "backgroundColor": "#fff",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderBottomWidth": 0.5,
                              "borderColor": "#bcbbc1",
                              "flexDirection": "row",
                              "padding": 14,
                            }
                          }
                          testID="RNE__LISTITEM__padView"
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                          >
                            <RNGestureHandlerButton
                              collapsable={false}
                              delayLongPress={600}
                              enabled={true}
                              exclusive={true}
                              handlerTag={30}
                              handlerType="NativeViewGestureHandler"
                              onGestureEvent={[Function]}
                              onGestureHandlerEvent={[Function]}
                              onGestureHandlerStateChange={[Function]}
                              onHandlerStateChange={[Function]}
                              rippleColor={0}
                              touchSoundDisabled={false}
                            >
                              <View
                                accessible={true}
                                collapsable={false}
                                style={
                                  {
                                    "opacity": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "marginRight": 16,
                                      },
                                      {
                                        "alignSelf": "flex-start",
                                      },
                                    ]
                                  }
                                >
                                  ProfileIcon
                                  <Text
                                    numberOfLines={1}
                                    selectable={true}
                                    style={
                                      [
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        },
                                        {
                                          "fontSize": 16,
                                          "lineHeight": 20,
                                        },
                                        {
                                          "color": "#8E8E8E",
                                        },
                                        {
                                          "textAlign": "center",
                                        },
                                        {
                                          "fontFamily": "Courier New",
                                        },
                                        {
                                          "marginTop": 8,
                                        },
                                      ]
                                    }
                                  >
                                    Doug
                                  </Text>
                                </View>
                              </View>
                            </RNGestureHandlerButton>
                          </View>
                          <View
                            style={
                              {
                                "paddingLeft": 16,
                              }
                            }
                          />
                          <View
                            style={
                              [
                                {
                                  "alignItems": "flex-start",
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                                undefined,
                              ]
                            }
                            theme={
                              {
                                "colors": {
                                  "background": "#ffffff",
                                  "black": "#242424",
                                  "disabled": "hsl(208, 8%, 90%)",
                                  "divider": "#bcbbc1",
                                  "error": "#ff190c",
                                  "grey0": "#393e42",
                                  "grey1": "#43484d",
                                  "grey2": "#5e6977",
                                  "grey3": "#86939e",
                                  "grey4": "#bdc6cf",
                                  "grey5": "#e1e8ee",
                                  "greyOutline": "#bbb",
                                  "platform": {
                                    "android": {
                                      "error": "#f44336",
                                      "grey": "rgba(0, 0, 0, 0.54)",
                                      "primary": "#2196f3",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#9C27B0",
                                      "success": "#4caf50",
                                      "warning": "#ffeb3b",
                                    },
                                    "default": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "ios": {
                                      "error": "#ff3b30",
                                      "grey": "#7d7d7d",
                                      "primary": "#007aff",
                                      "searchBg": "#dcdce1",
                                      "secondary": "#5856d6",
                                      "success": "#4cd964",
                                      "warning": "#ffcc00",
                                    },
                                    "web": {
                                      "error": "#ff190c",
                                      "grey": "#393e42",
                                      "primary": "#2089dc",
                                      "searchBg": "#303337",
                                      "secondary": "#ca71eb",
                                      "success": "#52c41a",
                                      "warning": "#faad14",
                                    },
                                  },
                                  "primary": "#2089dc",
                                  "searchBg": "#303337",
                                  "secondary": "#ad1457",
                                  "success": "#52c41a",
                                  "warning": "#faad14",
                                  "white": "#ffffff",
                                },
                                "spacing": {
                                  "lg": 12,
                                  "md": 8,
                                  "sm": 4,
                                  "xl": 24,
                                  "xs": 2,
                                },
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "backgroundColor": "transparent",
                                  "color": "#242424",
                                  "fontSize": 15,
                                }
                              }
                              testID="listItemTitle"
                            >
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Don't delete me!
                              </Text>
                            </Text>
                            <View
                              style={
                                {
                                  "flexDirection": "row",
                                  "flexWrap": "wrap",
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-up"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={31}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-up-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="thumbs-down"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={32}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"thumbs-down-sharp","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "marginRight": 16,
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={{}}
                                  testID="heart"
                                >
                                  <RNGestureHandlerButton
                                    collapsable={false}
                                    delayLongPress={600}
                                    enabled={true}
                                    exclusive={true}
                                    handlerTag={33}
                                    handlerType="NativeViewGestureHandler"
                                    onGestureEvent={[Function]}
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    onHandlerStateChange={[Function]}
                                    rippleColor={0}
                                    touchSoundDisabled={false}
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                            {
                                              "backgroundColor": "transparent",
                                            },
                                          ]
                                        }
                                      >
                                        <View>
                                          {"name":"heart","size":16,"color":"#3742fa"}
                                        </View>
                                      </View>
                                    </View>
                                  </RNGestureHandlerButton>
                                </View>
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                      {
                                        "marginLeft": 8,
                                      },
                                    ]
                                  }
                                >
                                  0
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "flexGrow": 1,
                                  }
                                }
                              />
                              <View
                                style={
                                  {
                                    "alignSelf": "flex-end",
                                    "marginLeft": "auto",
                                    "marginTop": 16,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    [
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 20,
                                      },
                                    ]
                                  }
                                >
                                  <time
                                    dateTime="2020-11-29T16:16:40.000Z"
                                    title="2020-11-29 16:16"
                                  >
                                    5 months ago
                                  </time>
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
