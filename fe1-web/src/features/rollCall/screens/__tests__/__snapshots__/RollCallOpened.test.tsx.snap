// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RollCallOpened renders correctly when no scan 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-evenly",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderWidth": 1,
        "flex": 8,
        "justifyContent": "center",
        "margin": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "black",
          "fontSize": 25,
          "marginHorizontal": 10,
          "textAlign": "center",
        }
      }
    >
      Please scan each participant’s Roll-call QR code exactly once.
    </Text>
    <View />
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#52c41a",
            "borderColor": "#fff",
            "borderRadius": 9,
            "borderWidth": 0.5,
            "height": 18,
            "justifyContent": "center",
            "minWidth": 18,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 12,
              "paddingHorizontal": 4,
            }
          }
        >
          0
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "marginHorizontal": 50,
          "marginVertical": 10,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            disabled={false}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Close Roll-Call
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "marginHorizontal": 50,
          "marginVertical": 10,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            disabled={false}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Add an attendee manually
          </Text>
        </View>
      </View>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 10,
          "borderWidth": 1,
          "margin": "auto",
          "width": 550,
        }
      }
    >
      <View
        style={
          Object {
            "borderBottomWidth": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "fontSize": 25,
              "fontWeight": "bold",
              "marginHorizontal": 10,
              "padding": 20,
              "paddingLeft": 10,
              "textAlign": "center",
            }
          }
        >
          Add an attendee
        </Text>
      </View>
      <Text
        style={
          Object {
            "alignSelf": "flex-start",
            "fontSize": 20,
            "marginHorizontal": 10,
            "padding": 20,
            "paddingLeft": 10,
            "textAlign": "left",
          }
        }
      >
        Enter token:
      </Text>
      <TextInput
        defaultValue=""
        onChangeText={[Function]}
        placeholder="Attendee token"
        selectTextOnFocus={true}
        style={
          Object {
            "borderBottomWidth": 2,
            "fontSize": 25,
            "marginHorizontal": 50,
            "marginVertical": 20,
            "textAlign": "center",
          }
        }
      />
      <View
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
            "paddingBottom": 20,
          }
        }
      >
        <View
          style={
            Object {
              "marginHorizontal": 50,
              "marginVertical": 10,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                disabled={false}
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Add
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "marginHorizontal": 50,
              "marginVertical": 10,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                disabled={false}
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`RollCallOpened renders correctly when scanning attendees 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-evenly",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderWidth": 1,
        "flex": 8,
        "justifyContent": "center",
        "margin": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "black",
          "fontSize": 25,
          "marginHorizontal": 10,
          "textAlign": "center",
        }
      }
    >
      Please scan each participant’s Roll-call QR code exactly once.
    </Text>
    <View />
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#52c41a",
            "borderColor": "#fff",
            "borderRadius": 9,
            "borderWidth": 0.5,
            "height": 18,
            "justifyContent": "center",
            "minWidth": 18,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 12,
              "paddingHorizontal": 4,
            }
          }
        >
          3
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "marginHorizontal": 50,
          "marginVertical": 10,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            disabled={false}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Close Roll-Call
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "marginHorizontal": 50,
          "marginVertical": 10,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            disabled={false}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Add an attendee manually
          </Text>
        </View>
      </View>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 10,
          "borderWidth": 1,
          "margin": "auto",
          "width": 550,
        }
      }
    >
      <View
        style={
          Object {
            "borderBottomWidth": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "fontSize": 25,
              "fontWeight": "bold",
              "marginHorizontal": 10,
              "padding": 20,
              "paddingLeft": 10,
              "textAlign": "center",
            }
          }
        >
          Add an attendee
        </Text>
      </View>
      <Text
        style={
          Object {
            "alignSelf": "flex-start",
            "fontSize": 20,
            "marginHorizontal": 10,
            "padding": 20,
            "paddingLeft": 10,
            "textAlign": "left",
          }
        }
      >
        Enter token:
      </Text>
      <TextInput
        defaultValue=""
        onChangeText={[Function]}
        placeholder="Attendee token"
        selectTextOnFocus={true}
        style={
          Object {
            "borderBottomWidth": 2,
            "fontSize": 25,
            "marginHorizontal": 50,
            "marginVertical": 20,
            "textAlign": "center",
          }
        }
      />
      <View
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
            "paddingBottom": 20,
          }
        }
      >
        <View
          style={
            Object {
              "marginHorizontal": 50,
              "marginVertical": 10,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                disabled={false}
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Add
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "marginHorizontal": 50,
              "marginVertical": 10,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                disabled={false}
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
