// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LinkedOrganizationsScreen input of correct organization details manually 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={20}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            collapsable={false}
                            handlerTag={21}
                            handlerType="NativeViewGestureHandler"
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              {
                                "padding": 16,
                              }
                            }
                            waitFor={
                              [
                                {
                                  "current": null,
                                },
                              ]
                            }
                          >
                            <View>
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Here you can find all linked organizations, unlink them and add new ones.
                              </Text>
                              <View
                                style={
                                  {
                                    "borderRadius": 8,
                                    "marginBottom": 16,
                                  }
                                }
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "backgroundColor": "#fff",
                                      },
                                      {
                                        "borderTopLeftRadius": 8,
                                        "borderTopRightRadius": 8,
                                      },
                                      {
                                        "borderBottomLeftRadius": 8,
                                        "borderBottomRightRadius": 8,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "alignItems": "center",
                                        "backgroundColor": "#fff",
                                        "borderBottomLeftRadius": 8,
                                        "borderBottomRightRadius": 8,
                                        "borderBottomWidth": 0.5,
                                        "borderColor": "#bcbbc1",
                                        "borderTopLeftRadius": 8,
                                        "borderTopRightRadius": 8,
                                        "flexDirection": "row",
                                        "padding": 14,
                                      }
                                    }
                                    testID="RNE__LISTITEM__padView"
                                  >
                                    <View>
                                      {"name":"business","size":25,"color":"#000"}
                                    </View>
                                    <View
                                      style={
                                        {
                                          "paddingLeft": 16,
                                        }
                                      }
                                    />
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "flex-start",
                                            "flex": 1,
                                            "justifyContent": "center",
                                          },
                                          undefined,
                                        ]
                                      }
                                      theme={
                                        {
                                          "colors": {
                                            "background": "#ffffff",
                                            "black": "#242424",
                                            "disabled": "hsl(208, 8%, 90%)",
                                            "divider": "#bcbbc1",
                                            "error": "#ff190c",
                                            "grey0": "#393e42",
                                            "grey1": "#43484d",
                                            "grey2": "#5e6977",
                                            "grey3": "#86939e",
                                            "grey4": "#bdc6cf",
                                            "grey5": "#e1e8ee",
                                            "greyOutline": "#bbb",
                                            "platform": {
                                              "android": {
                                                "error": "#f44336",
                                                "grey": "rgba(0, 0, 0, 0.54)",
                                                "primary": "#2196f3",
                                                "searchBg": "#dcdce1",
                                                "secondary": "#9C27B0",
                                                "success": "#4caf50",
                                                "warning": "#ffeb3b",
                                              },
                                              "default": {
                                                "error": "#ff3b30",
                                                "grey": "#7d7d7d",
                                                "primary": "#007aff",
                                                "searchBg": "#dcdce1",
                                                "secondary": "#5856d6",
                                                "success": "#4cd964",
                                                "warning": "#ffcc00",
                                              },
                                              "ios": {
                                                "error": "#ff3b30",
                                                "grey": "#7d7d7d",
                                                "primary": "#007aff",
                                                "searchBg": "#dcdce1",
                                                "secondary": "#5856d6",
                                                "success": "#4cd964",
                                                "warning": "#ffcc00",
                                              },
                                              "web": {
                                                "error": "#ff190c",
                                                "grey": "#393e42",
                                                "primary": "#2089dc",
                                                "searchBg": "#303337",
                                                "secondary": "#ca71eb",
                                                "success": "#52c41a",
                                                "warning": "#faad14",
                                              },
                                            },
                                            "primary": "#2089dc",
                                            "searchBg": "#303337",
                                            "secondary": "#ad1457",
                                            "success": "#52c41a",
                                            "warning": "#faad14",
                                            "white": "#ffffff",
                                          },
                                          "spacing": {
                                            "lg": 12,
                                            "md": 8,
                                            "sm": 4,
                                            "xl": 24,
                                            "xs": 2,
                                          },
                                        }
                                      }
                                    >
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "backgroundColor": "transparent",
                                            "color": "#242424",
                                            "fontSize": 17,
                                          }
                                        }
                                        testID="listItemTitle"
                                      >
                                        Lao ID: 
                                        f
                                        z
                                        J
                                        S
                                        Z
                                        j
                                        K
                                        f
                                        -
                                        2
                                        c
                                        b
                                        X
                                        H
                                        7
                                        k
                                        d
                                        s
                                        9
                                        H
                                        8
                                        N
                                        O
                                        R
                                        u
                                        u
                                        F
                                        I
                                        R
                                        L
                                        k
                                        e
                                        v
                                        J
                                        l
                                        N
                                        7
                                        q
                                        Q
                                        e
                                        m
                                        j
                                        o
                                        =
                                      </Text>
                                      <Text
                                        accessibilityRole="text"
                                        style={
                                          {
                                            "backgroundColor": "transparent",
                                            "color": "#242424",
                                            "fontSize": 15,
                                          }
                                        }
                                        testID="listItemTitle"
                                      >
                                        Public Key: 
                                        J
                                        9
                                        f
                                        B
                                        z
                                        J
                                        V
                                        7
                                        0
                                        J
                                        k
                                        5
                                        c
                                        -
                                        i
                                        3
                                        2
                                        7
                                        7
                                        U
                                        q
                                        4
                                        C
                                        m
                                        e
                                        L
                                        4
                                        t
                                        5
                                        3
                                        W
                                        D
                                        f
                                        U
                                        g
                                        h
                                        a
                                        K
                                        0
                                        H
                                        p
                                        e
                                        M
                                        =
                                        , Server Address:
                                         
                                        wss://epfl.ch:9000/server
                                        , Challenge Value:
                                         
                                        82520f235f413b26571529f69d53d751335873efca97e15cd7c47d063ead830d
                                        , Challenge Valid_until:
                                         
                                        1620342000
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-add-organization"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                                testID="modal-show-scanner"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-show-qr-code"
                                transparent={true}
                                visible={true}
                              >
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  delayLongPress={600}
                                  enabled={true}
                                  exclusive={true}
                                  handlerTag={25}
                                  handlerType="NativeViewGestureHandler"
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                  style={
                                    {
                                      "backgroundColor": "rgba(0,0,0,0.25)",
                                      "bottom": 0,
                                      "flex": 1,
                                      "left": 0,
                                      "padding": 32,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  touchSoundDisabled={false}
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    style={{}}
                                  />
                                </RNGestureHandlerButton>
                                <View
                                  style={
                                    {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                      "borderRadius": 8,
                                      "margin": 32,
                                      "padding": 32,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "space-between",
                                        "marginBottom": 16,
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <View />
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        }
                                      }
                                    >
                                      Join Organization
                                    </Text>
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="modal-header-close"
                                    >
                                      <View>
                                        {"name":"ios-close","size":25,"color":"#000"}
                                      </View>
                                    </View>
                                  </View>
                                  <Text
                                    style={
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    Scan the QR Code with the other organizers device.
                                  </Text>
                                  <View
                                    style={
                                      {
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <qrcode
                                        level="H"
                                        size={256}
                                        style={
                                          {
                                            "height": "auto",
                                            "maxWidth": "300px",
                                            "width": "100%",
                                          }
                                        }
                                        value="{"lao_id":"fzJSZjKf-2cbXH7kds9H8NORuuFIRLkevJlN7qQemjo=","public_key":"J9fBzJV70Jk5c-i3277Uq4CmeL4t53WDfUghaK0HpeM=","server_address":"wss://epfl.ch:9000/server","challenge":{"value":"82520f235f413b26571529f69d53d751335873efca97e15cd7c47d063ead830d","valid_until":1714491502}}"
                                        viewBox="0 0 256 256"
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "center",
                                            "backgroundColor": "#3742fa",
                                            "borderRadius": 100,
                                            "bottom": "27.9%",
                                            "display": "flex",
                                            "justifyContent": "center",
                                            "left": "27.9%",
                                            "overflow": "hidden",
                                            "padding": "4",
                                            "position": "absolute",
                                            "right": "27.9%",
                                            "top": "27.9%",
                                          }
                                        }
                                      >
                                        <Text
                                          style={
                                            [
                                              {
                                                "color": "#000",
                                                "fontSize": 20,
                                                "lineHeight": 26,
                                                "textAlign": "left",
                                              },
                                              {
                                                "textAlign": "center",
                                              },
                                              {
                                                "color": "#fff",
                                              },
                                            ]
                                          }
                                        >
                                          Scan to exchange info
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                  <View
                                    style={
                                      {
                                        "marginTop": 15,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="button-next-finish"
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                          ]
                                        }
                                      >
                                        <Text
                                          style={
                                            {
                                              "color": "#fff",
                                              "textAlign": "center",
                                            }
                                          }
                                        >
                                          Finish
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </Modal>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-manual-input"
                                transparent={true}
                                visible={false}
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderRadius": 28,
                              "bottom": 30,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "margin": 16,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 30,
                              "transform": [
                                {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 2,
                                },
                                {
                                  "borderRadius": 28,
                                  "elevation": 4,
                                },
                                false,
                              ]
                            }
                            testID="RNE_BUTTON_WRAPPER"
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": false,
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "opacity": 1,
                                }
                              }
                              testID="fab-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "#3742fa",
                                    "borderColor": "#2089dc",
                                    "borderRadius": 2,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 56,
                                    "justifyContent": "center",
                                    "padding": 16,
                                    "paddingHorizontal": 10,
                                    "width": 56,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LinkedOrganizationsScreen input of wrong organization details manually 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={26}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            collapsable={false}
                            handlerTag={27}
                            handlerType="NativeViewGestureHandler"
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              {
                                "padding": 16,
                              }
                            }
                            waitFor={
                              [
                                {
                                  "current": null,
                                },
                              ]
                            }
                          >
                            <View>
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Here you can find all linked organizations, unlink them and add new ones.
                              </Text>
                              <View
                                style={
                                  {
                                    "borderRadius": 8,
                                    "marginBottom": 16,
                                  }
                                }
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-add-organization"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                                testID="modal-show-scanner"
                                transparent={true}
                                visible={true}
                              >
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  delayLongPress={600}
                                  enabled={true}
                                  exclusive={true}
                                  handlerTag={29}
                                  handlerType="NativeViewGestureHandler"
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                  style={
                                    {
                                      "backgroundColor": "rgba(0,0,0,0.25)",
                                      "bottom": 0,
                                      "flex": 1,
                                      "left": 0,
                                      "padding": 32,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  touchSoundDisabled={false}
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    style={{}}
                                  />
                                </RNGestureHandlerButton>
                                <View
                                  style={
                                    {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                      "borderRadius": 8,
                                      "flex": 1,
                                      "margin": 32,
                                      "padding": 32,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "space-between",
                                        "marginBottom": 16,
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <View />
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        }
                                      }
                                    >
                                      Link Organization
                                    </Text>
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="modal-header-close"
                                    >
                                      <View>
                                        {"name":"ios-close","size":25,"color":"#000"}
                                      </View>
                                    </View>
                                  </View>
                                  <Text
                                    style={
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    Scan the QR Code from the other organizers device.
                                  </Text>
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                          "zIndex": 0,
                                        }
                                      }
                                    >
                                      <View />
                                    </View>
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                          "flexDirection": "column",
                                          "margin": 16,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          {
                                            "bottom": 0,
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "borderRadius": 8,
                                              "marginBottom": 16,
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              {
                                                "alignItems": "center",
                                                "bottom": "50%",
                                                "justifyContent": "center",
                                                "opacity": 0.5,
                                                "top": "25%",
                                              }
                                            }
                                          >
                                            <RNSVGSvgView
                                              align="xMidYMid"
                                              bbHeight="300"
                                              bbWidth="300"
                                              focusable={false}
                                              height={300}
                                              meetOrSlice={0}
                                              minX={0}
                                              minY={0}
                                              style={
                                                [
                                                  {
                                                    "backgroundColor": "transparent",
                                                    "borderWidth": 0,
                                                  },
                                                  {
                                                    "flex": 0,
                                                    "height": 300,
                                                    "width": 300,
                                                  },
                                                ]
                                              }
                                              vbHeight={494}
                                              vbWidth={494}
                                              width={300}
                                            >
                                              <RNSVGGroup>
                                                <RNSVGPath
                                                  d="M392.4 101.2h-22.398v22.398H392.4V101.2Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199V78.802h67.199v67.199Zm-313.6-22.398h22.398v-22.398h-22.398v22.398ZM56.402 168.4h112v-112h-112v112Zm22.402-89.598h67.199v67.199H78.804V78.802Zm313.6 291.2h-22.398V392.4h22.398v-22.398Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199v-67.199h67.199v67.199Zm-156.8-291.2h22.398v-22.398h22.398V78.807h-22.398V56.409h-67.199v22.398h44.801v22.398h-22.398v44.801h22.398v-22.403Zm-22.398 22.398h-22.398v22.398h22.398v-22.398Zm-44.801-22.398v22.398h22.398v-22.398h-22.398Zm0-22.402h22.398V78.803h-22.398v22.398Zm-44.801 112h-22.398v22.398h22.398v-22.398Zm89.602-22.398v22.398h67.199v-22.398H280.41v-44.801h-22.398v44.801h-22.403Zm-22.402-22.402h-22.398v44.801h22.398v-44.801Zm-44.801 22.402h-22.398v22.398h22.398v-22.398Zm-89.598 0v22.398h44.801v-22.398H78.808Zm112 44.801v-22.398H168.41v22.398h22.398Zm-44.801 22.398h22.398v-22.398h-22.398v22.398Zm-89.602-22.398h22.398v-22.398H56.405v22.398Zm0 22.398V280.4h22.398v-22.398H56.405ZM78.807 280.4v22.398h22.398V280.4H78.807Zm-22.402 44.801v44.801h22.398v-22.398h22.398v-22.398l-44.796-.005Zm44.801 44.801h44.801v-22.398h-44.801v22.398Zm246.4-112v-22.398h-22.398v22.398h22.398Zm-156.8 112h-22.398V392.4h22.398v-22.398ZM168.404 392.4h-112v44.801h22.398v-22.398H101.2v22.398h22.398v-22.398h22.398v22.398h67.199v-22.398h-44.801l.01-22.403Zm89.602 44.801v-22.398h-22.398v22.398h22.398Zm22.398 0h22.398v-22.398h-22.398v22.398Zm0-156.8h44.801v-22.398h-22.398v-22.398h-22.398v22.398h-22.398v67.199h44.801v-22.398h-22.398l-.01-22.403Zm-67.199 134.4h22.398v-22.398h-22.398v22.398Zm-44.801-89.602h-22.398v22.398h44.801v-44.801h-22.398l-.005 22.403ZM146.006 258h-22.398v-22.398H101.21v44.801h22.398v22.398H101.21v22.398h44.801L146.006 258Zm89.602 112v22.398h22.398V370h22.398v22.398h22.398v-44.801h-67.199v-44.801h-22.398v67.199l22.403.005Zm-67.203-89.602h22.398v22.398h22.398v-22.398h22.398V258H168.4l.005 22.398Zm44.801-44.797h22.398v-22.398h-22.398v22.398Zm22.402 0v22.398h22.398v-22.398h-22.398Zm89.598 0v-22.398h-22.398v22.398h22.398Zm22.402-44.801H325.21v22.398h22.398V190.8Zm22.398 0v44.801h22.398V190.8h-22.398Zm0 89.598v22.398h22.398v-22.398h22.398V258H437.2v-44.801h-22.398v22.398h-22.398v22.398h-44.801v22.398l22.403.005ZM325.205 302.8h22.398v-22.398h-22.398V302.8ZM414.807.4v22.398h56v56h22.398V.4h-78.398Zm-392 22.402h56V.404H.409v78.398h22.398v-56Zm0 392H.409V493.2h78.398v-22.398h-56v-56Zm448 56h-56V493.2h78.398v-78.398h-22.398v56Zm-33.602-168v-22.398h-22.398v22.398h22.398Z"
                                                  fill={
                                                    {
                                                      "payload": 4294967295,
                                                      "type": 0,
                                                    }
                                                  }
                                                  propList={
                                                    [
                                                      "fill",
                                                    ]
                                                  }
                                                />
                                              </RNSVGGroup>
                                            </RNSVGSvgView>
                                          </View>
                                          <View
                                            style={
                                              {
                                                "top": "35%",
                                              }
                                            }
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignSelf": "center",
                                                  "backgroundColor": "#fff",
                                                  "borderColor": "#2196F3",
                                                  "borderRadius": 8,
                                                  "borderWidth": 4,
                                                  "marginBottom": 16,
                                                  "padding": 8,
                                                }
                                              }
                                            >
                                              <View
                                                accessible={true}
                                                collapsable={false}
                                                focusable={true}
                                                onClick={[Function]}
                                                onResponderGrant={[Function]}
                                                onResponderMove={[Function]}
                                                onResponderRelease={[Function]}
                                                onResponderTerminate={[Function]}
                                                onResponderTerminationRequest={[Function]}
                                                onStartShouldSetResponder={[Function]}
                                                style={
                                                  {
                                                    "opacity": 1,
                                                  }
                                                }
                                                testID="open_add_manually"
                                              >
                                                <Text
                                                  style={
                                                    [
                                                      {
                                                        "color": "#000",
                                                        "fontSize": 20,
                                                        "lineHeight": 26,
                                                        "textAlign": "left",
                                                      },
                                                      {
                                                        "color": "#3742fa",
                                                      },
                                                      {
                                                        "textAlign": "center",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  Enter Manually
                                                </Text>
                                              </View>
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </Modal>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-show-qr-code"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-manual-input"
                                transparent={true}
                                visible={false}
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderRadius": 28,
                              "bottom": 30,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "margin": 16,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 30,
                              "transform": [
                                {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 2,
                                },
                                {
                                  "borderRadius": 28,
                                  "elevation": 4,
                                },
                                false,
                              ]
                            }
                            testID="RNE_BUTTON_WRAPPER"
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": false,
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "opacity": 1,
                                }
                              }
                              testID="fab-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "#3742fa",
                                    "borderColor": "#2089dc",
                                    "borderRadius": 2,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 56,
                                    "justifyContent": "center",
                                    "padding": 16,
                                    "paddingHorizontal": 10,
                                    "width": 56,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LinkedOrganizationsScreen opens modal on FAB press 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={4}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            collapsable={false}
                            handlerTag={5}
                            handlerType="NativeViewGestureHandler"
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              {
                                "padding": 16,
                              }
                            }
                            waitFor={
                              [
                                {
                                  "current": null,
                                },
                              ]
                            }
                          >
                            <View>
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Here you can find all linked organizations, unlink them and add new ones.
                              </Text>
                              <View
                                style={
                                  {
                                    "borderRadius": 8,
                                    "marginBottom": 16,
                                  }
                                }
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-add-organization"
                                transparent={true}
                                visible={true}
                              >
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  delayLongPress={600}
                                  enabled={true}
                                  exclusive={true}
                                  handlerTag={6}
                                  handlerType="NativeViewGestureHandler"
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                  style={
                                    {
                                      "backgroundColor": "rgba(0,0,0,0.25)",
                                      "bottom": 0,
                                      "flex": 1,
                                      "left": 0,
                                      "padding": 32,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  touchSoundDisabled={false}
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    style={{}}
                                  />
                                </RNGestureHandlerButton>
                                <View
                                  style={
                                    {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                      "borderRadius": 8,
                                      "margin": 32,
                                      "padding": 32,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "space-between",
                                        "marginBottom": 16,
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <View />
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        }
                                      }
                                    >
                                      Add Linked Organization
                                    </Text>
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="modal-header-close"
                                    >
                                      <View>
                                        {"name":"ios-close","size":25,"color":"#000"}
                                      </View>
                                    </View>
                                  </View>
                                  <Text
                                    style={
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "left",
                                      }
                                    }
                                  >
                                    To link two organizations, one organizer has to first join the other organization by generating a QR Code (Join Organization), which other one links to his organization by scanning the QR Code (Link Organization). Subsequent to scanning the first QR Code, the other QR Code will appear. After the first QR Code was scanned, the other scanner for the second QR Code can be opened by clicking the “Next” button.
                                  </Text>
                                  <View
                                    style={
                                      {
                                        "marginBottom": 10,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="show-qr-code"
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                          ]
                                        }
                                      >
                                        <Text
                                          style={
                                            {
                                              "color": "#fff",
                                              "fontSize": 18,
                                              "margin": 3,
                                              "textAlign": "center",
                                            }
                                          }
                                        >
                                          Join Organization
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      {
                                        "opacity": 1,
                                      }
                                    }
                                    testID="show-scanner"
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "backgroundColor": "#3742fa",
                                            "borderColor": "#3742fa",
                                            "borderRadius": 8,
                                            "borderWidth": 1,
                                            "padding": 8,
                                          },
                                          {
                                            "backgroundColor": "#008ec2",
                                            "borderColor": "#008ec2",
                                          },
                                        ]
                                      }
                                    >
                                      <Text
                                        style={
                                          {
                                            "color": "#fff",
                                            "fontSize": 18,
                                            "margin": 3,
                                            "textAlign": "center",
                                          }
                                        }
                                      >
                                        Link Organization
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </Modal>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                                testID="modal-show-scanner"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-show-qr-code"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-manual-input"
                                transparent={true}
                                visible={false}
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderRadius": 28,
                              "bottom": 30,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "margin": 16,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 30,
                              "transform": [
                                {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 2,
                                },
                                {
                                  "borderRadius": 28,
                                  "elevation": 4,
                                },
                                false,
                              ]
                            }
                            testID="RNE_BUTTON_WRAPPER"
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": false,
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "opacity": 1,
                                }
                              }
                              testID="fab-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "#3742fa",
                                    "borderColor": "#2089dc",
                                    "borderRadius": 2,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 56,
                                    "justifyContent": "center",
                                    "padding": 16,
                                    "paddingHorizontal": 10,
                                    "width": 56,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LinkedOrganizationsScreen opens modal on press join org 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={7}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            collapsable={false}
                            handlerTag={8}
                            handlerType="NativeViewGestureHandler"
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              {
                                "padding": 16,
                              }
                            }
                            waitFor={
                              [
                                {
                                  "current": null,
                                },
                              ]
                            }
                          >
                            <View>
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Here you can find all linked organizations, unlink them and add new ones.
                              </Text>
                              <View
                                style={
                                  {
                                    "borderRadius": 8,
                                    "marginBottom": 16,
                                  }
                                }
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-add-organization"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                                testID="modal-show-scanner"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-show-qr-code"
                                transparent={true}
                                visible={true}
                              >
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  delayLongPress={600}
                                  enabled={true}
                                  exclusive={true}
                                  handlerTag={10}
                                  handlerType="NativeViewGestureHandler"
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                  style={
                                    {
                                      "backgroundColor": "rgba(0,0,0,0.25)",
                                      "bottom": 0,
                                      "flex": 1,
                                      "left": 0,
                                      "padding": 32,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  touchSoundDisabled={false}
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    style={{}}
                                  />
                                </RNGestureHandlerButton>
                                <View
                                  style={
                                    {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                      "borderRadius": 8,
                                      "margin": 32,
                                      "padding": 32,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "space-between",
                                        "marginBottom": 16,
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <View />
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        }
                                      }
                                    >
                                      Join Organization
                                    </Text>
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="modal-header-close"
                                    >
                                      <View>
                                        {"name":"ios-close","size":25,"color":"#000"}
                                      </View>
                                    </View>
                                  </View>
                                  <Text
                                    style={
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    Scan the QR Code with the other organizers device.
                                  </Text>
                                  <View
                                    style={
                                      {
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <qrcode
                                        level="H"
                                        size={256}
                                        style={
                                          {
                                            "height": "auto",
                                            "maxWidth": "300px",
                                            "width": "100%",
                                          }
                                        }
                                        value="{"lao_id":"fzJSZjKf-2cbXH7kds9H8NORuuFIRLkevJlN7qQemjo=","public_key":"J9fBzJV70Jk5c-i3277Uq4CmeL4t53WDfUghaK0HpeM=","server_address":"wss://epfl.ch:9000/server","challenge":{"value":"82520f235f413b26571529f69d53d751335873efca97e15cd7c47d063ead830d","valid_until":1714491502}}"
                                        viewBox="0 0 256 256"
                                      />
                                      <View
                                        style={
                                          {
                                            "alignItems": "center",
                                            "backgroundColor": "#3742fa",
                                            "borderRadius": 100,
                                            "bottom": "27.9%",
                                            "display": "flex",
                                            "justifyContent": "center",
                                            "left": "27.9%",
                                            "overflow": "hidden",
                                            "padding": "4",
                                            "position": "absolute",
                                            "right": "27.9%",
                                            "top": "27.9%",
                                          }
                                        }
                                      >
                                        <Text
                                          style={
                                            [
                                              {
                                                "color": "#000",
                                                "fontSize": 20,
                                                "lineHeight": 26,
                                                "textAlign": "left",
                                              },
                                              {
                                                "textAlign": "center",
                                              },
                                              {
                                                "color": "#fff",
                                              },
                                            ]
                                          }
                                        >
                                          Scan to exchange info
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                  <View
                                    style={
                                      {
                                        "marginTop": 15,
                                      }
                                    }
                                  >
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="button-next-finish"
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "backgroundColor": "#3742fa",
                                              "borderColor": "#3742fa",
                                              "borderRadius": 8,
                                              "borderWidth": 1,
                                              "padding": 8,
                                            },
                                          ]
                                        }
                                      >
                                        <Text
                                          style={
                                            {
                                              "color": "#fff",
                                              "textAlign": "center",
                                            }
                                          }
                                        >
                                          Next
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </Modal>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-manual-input"
                                transparent={true}
                                visible={false}
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderRadius": 28,
                              "bottom": 30,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "margin": 16,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 30,
                              "transform": [
                                {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 2,
                                },
                                {
                                  "borderRadius": 28,
                                  "elevation": 4,
                                },
                                false,
                              ]
                            }
                            testID="RNE_BUTTON_WRAPPER"
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": false,
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "opacity": 1,
                                }
                              }
                              testID="fab-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "#3742fa",
                                    "borderColor": "#2089dc",
                                    "borderRadius": 2,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 56,
                                    "justifyContent": "center",
                                    "padding": 16,
                                    "paddingHorizontal": 10,
                                    "width": 56,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LinkedOrganizationsScreen opens modal on press link org 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={11}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            collapsable={false}
                            handlerTag={12}
                            handlerType="NativeViewGestureHandler"
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              {
                                "padding": 16,
                              }
                            }
                            waitFor={
                              [
                                {
                                  "current": null,
                                },
                              ]
                            }
                          >
                            <View>
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Here you can find all linked organizations, unlink them and add new ones.
                              </Text>
                              <View
                                style={
                                  {
                                    "borderRadius": 8,
                                    "marginBottom": 16,
                                  }
                                }
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-add-organization"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                                testID="modal-show-scanner"
                                transparent={true}
                                visible={true}
                              >
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  delayLongPress={600}
                                  enabled={true}
                                  exclusive={true}
                                  handlerTag={14}
                                  handlerType="NativeViewGestureHandler"
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                  style={
                                    {
                                      "backgroundColor": "rgba(0,0,0,0.25)",
                                      "bottom": 0,
                                      "flex": 1,
                                      "left": 0,
                                      "padding": 32,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  touchSoundDisabled={false}
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    style={{}}
                                  />
                                </RNGestureHandlerButton>
                                <View
                                  style={
                                    {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                      "borderRadius": 8,
                                      "flex": 1,
                                      "margin": 32,
                                      "padding": 32,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "space-between",
                                        "marginBottom": 16,
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <View />
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        }
                                      }
                                    >
                                      Link Organization
                                    </Text>
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="modal-header-close"
                                    >
                                      <View>
                                        {"name":"ios-close","size":25,"color":"#000"}
                                      </View>
                                    </View>
                                  </View>
                                  <Text
                                    style={
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    Scan the QR Code from the other organizers device.
                                  </Text>
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                          "zIndex": 0,
                                        }
                                      }
                                    >
                                      <View />
                                    </View>
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                          "flexDirection": "column",
                                          "margin": 16,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          {
                                            "bottom": 0,
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "borderRadius": 8,
                                              "marginBottom": 16,
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              {
                                                "alignItems": "center",
                                                "bottom": "50%",
                                                "justifyContent": "center",
                                                "opacity": 0.5,
                                                "top": "25%",
                                              }
                                            }
                                          >
                                            <RNSVGSvgView
                                              align="xMidYMid"
                                              bbHeight="300"
                                              bbWidth="300"
                                              focusable={false}
                                              height={300}
                                              meetOrSlice={0}
                                              minX={0}
                                              minY={0}
                                              style={
                                                [
                                                  {
                                                    "backgroundColor": "transparent",
                                                    "borderWidth": 0,
                                                  },
                                                  {
                                                    "flex": 0,
                                                    "height": 300,
                                                    "width": 300,
                                                  },
                                                ]
                                              }
                                              vbHeight={494}
                                              vbWidth={494}
                                              width={300}
                                            >
                                              <RNSVGGroup>
                                                <RNSVGPath
                                                  d="M392.4 101.2h-22.398v22.398H392.4V101.2Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199V78.802h67.199v67.199Zm-313.6-22.398h22.398v-22.398h-22.398v22.398ZM56.402 168.4h112v-112h-112v112Zm22.402-89.598h67.199v67.199H78.804V78.802Zm313.6 291.2h-22.398V392.4h22.398v-22.398Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199v-67.199h67.199v67.199Zm-156.8-291.2h22.398v-22.398h22.398V78.807h-22.398V56.409h-67.199v22.398h44.801v22.398h-22.398v44.801h22.398v-22.403Zm-22.398 22.398h-22.398v22.398h22.398v-22.398Zm-44.801-22.398v22.398h22.398v-22.398h-22.398Zm0-22.402h22.398V78.803h-22.398v22.398Zm-44.801 112h-22.398v22.398h22.398v-22.398Zm89.602-22.398v22.398h67.199v-22.398H280.41v-44.801h-22.398v44.801h-22.403Zm-22.402-22.402h-22.398v44.801h22.398v-44.801Zm-44.801 22.402h-22.398v22.398h22.398v-22.398Zm-89.598 0v22.398h44.801v-22.398H78.808Zm112 44.801v-22.398H168.41v22.398h22.398Zm-44.801 22.398h22.398v-22.398h-22.398v22.398Zm-89.602-22.398h22.398v-22.398H56.405v22.398Zm0 22.398V280.4h22.398v-22.398H56.405ZM78.807 280.4v22.398h22.398V280.4H78.807Zm-22.402 44.801v44.801h22.398v-22.398h22.398v-22.398l-44.796-.005Zm44.801 44.801h44.801v-22.398h-44.801v22.398Zm246.4-112v-22.398h-22.398v22.398h22.398Zm-156.8 112h-22.398V392.4h22.398v-22.398ZM168.404 392.4h-112v44.801h22.398v-22.398H101.2v22.398h22.398v-22.398h22.398v22.398h67.199v-22.398h-44.801l.01-22.403Zm89.602 44.801v-22.398h-22.398v22.398h22.398Zm22.398 0h22.398v-22.398h-22.398v22.398Zm0-156.8h44.801v-22.398h-22.398v-22.398h-22.398v22.398h-22.398v67.199h44.801v-22.398h-22.398l-.01-22.403Zm-67.199 134.4h22.398v-22.398h-22.398v22.398Zm-44.801-89.602h-22.398v22.398h44.801v-44.801h-22.398l-.005 22.403ZM146.006 258h-22.398v-22.398H101.21v44.801h22.398v22.398H101.21v22.398h44.801L146.006 258Zm89.602 112v22.398h22.398V370h22.398v22.398h22.398v-44.801h-67.199v-44.801h-22.398v67.199l22.403.005Zm-67.203-89.602h22.398v22.398h22.398v-22.398h22.398V258H168.4l.005 22.398Zm44.801-44.797h22.398v-22.398h-22.398v22.398Zm22.402 0v22.398h22.398v-22.398h-22.398Zm89.598 0v-22.398h-22.398v22.398h22.398Zm22.402-44.801H325.21v22.398h22.398V190.8Zm22.398 0v44.801h22.398V190.8h-22.398Zm0 89.598v22.398h22.398v-22.398h22.398V258H437.2v-44.801h-22.398v22.398h-22.398v22.398h-44.801v22.398l22.403.005ZM325.205 302.8h22.398v-22.398h-22.398V302.8ZM414.807.4v22.398h56v56h22.398V.4h-78.398Zm-392 22.402h56V.404H.409v78.398h22.398v-56Zm0 392H.409V493.2h78.398v-22.398h-56v-56Zm448 56h-56V493.2h78.398v-78.398h-22.398v56Zm-33.602-168v-22.398h-22.398v22.398h22.398Z"
                                                  fill={
                                                    {
                                                      "payload": 4294967295,
                                                      "type": 0,
                                                    }
                                                  }
                                                  propList={
                                                    [
                                                      "fill",
                                                    ]
                                                  }
                                                />
                                              </RNSVGGroup>
                                            </RNSVGSvgView>
                                          </View>
                                          <View
                                            style={
                                              {
                                                "top": "35%",
                                              }
                                            }
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignSelf": "center",
                                                  "backgroundColor": "#fff",
                                                  "borderColor": "#2196F3",
                                                  "borderRadius": 8,
                                                  "borderWidth": 4,
                                                  "marginBottom": 16,
                                                  "padding": 8,
                                                }
                                              }
                                            >
                                              <View
                                                accessible={true}
                                                collapsable={false}
                                                focusable={true}
                                                onClick={[Function]}
                                                onResponderGrant={[Function]}
                                                onResponderMove={[Function]}
                                                onResponderRelease={[Function]}
                                                onResponderTerminate={[Function]}
                                                onResponderTerminationRequest={[Function]}
                                                onStartShouldSetResponder={[Function]}
                                                style={
                                                  {
                                                    "opacity": 1,
                                                  }
                                                }
                                                testID="open_add_manually"
                                              >
                                                <Text
                                                  style={
                                                    [
                                                      {
                                                        "color": "#000",
                                                        "fontSize": 20,
                                                        "lineHeight": 26,
                                                        "textAlign": "left",
                                                      },
                                                      {
                                                        "color": "#3742fa",
                                                      },
                                                      {
                                                        "textAlign": "center",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  Enter Manually
                                                </Text>
                                              </View>
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </Modal>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-show-qr-code"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-manual-input"
                                transparent={true}
                                visible={false}
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderRadius": 28,
                              "bottom": 30,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "margin": 16,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 30,
                              "transform": [
                                {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 2,
                                },
                                {
                                  "borderRadius": 28,
                                  "elevation": 4,
                                },
                                false,
                              ]
                            }
                            testID="RNE_BUTTON_WRAPPER"
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": false,
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "opacity": 1,
                                }
                              }
                              testID="fab-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "#3742fa",
                                    "borderColor": "#2089dc",
                                    "borderRadius": 2,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 56,
                                    "justifyContent": "center",
                                    "padding": 16,
                                    "paddingHorizontal": 10,
                                    "width": 56,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LinkedOrganizationsScreen opens modal on press next 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={15}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            collapsable={false}
                            handlerTag={16}
                            handlerType="NativeViewGestureHandler"
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              {
                                "padding": 16,
                              }
                            }
                            waitFor={
                              [
                                {
                                  "current": null,
                                },
                              ]
                            }
                          >
                            <View>
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Here you can find all linked organizations, unlink them and add new ones.
                              </Text>
                              <View
                                style={
                                  {
                                    "borderRadius": 8,
                                    "marginBottom": 16,
                                  }
                                }
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-add-organization"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                                testID="modal-show-scanner"
                                transparent={true}
                                visible={true}
                              >
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  delayLongPress={600}
                                  enabled={true}
                                  exclusive={true}
                                  handlerTag={19}
                                  handlerType="NativeViewGestureHandler"
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                  style={
                                    {
                                      "backgroundColor": "rgba(0,0,0,0.25)",
                                      "bottom": 0,
                                      "flex": 1,
                                      "left": 0,
                                      "padding": 32,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  touchSoundDisabled={false}
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    style={{}}
                                  />
                                </RNGestureHandlerButton>
                                <View
                                  style={
                                    {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                      "borderRadius": 8,
                                      "flex": 1,
                                      "margin": 32,
                                      "padding": 32,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "justifyContent": "space-between",
                                        "marginBottom": 16,
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <View />
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        {
                                          "color": "#000",
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        }
                                      }
                                    >
                                      Link Organization
                                    </Text>
                                    <View
                                      accessible={true}
                                      collapsable={false}
                                      focusable={true}
                                      onClick={[Function]}
                                      onResponderGrant={[Function]}
                                      onResponderMove={[Function]}
                                      onResponderRelease={[Function]}
                                      onResponderTerminate={[Function]}
                                      onResponderTerminationRequest={[Function]}
                                      onStartShouldSetResponder={[Function]}
                                      style={
                                        {
                                          "opacity": 1,
                                        }
                                      }
                                      testID="modal-header-close"
                                    >
                                      <View>
                                        {"name":"ios-close","size":25,"color":"#000"}
                                      </View>
                                    </View>
                                  </View>
                                  <Text
                                    style={
                                      {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "marginBottom": 16,
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    Scan the QR Code from the other organizers device.
                                  </Text>
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                          "zIndex": 0,
                                        }
                                      }
                                    >
                                      <View />
                                    </View>
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                          "flexDirection": "column",
                                          "margin": 16,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          {
                                            "bottom": 0,
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "borderRadius": 8,
                                              "marginBottom": 16,
                                            }
                                          }
                                        >
                                          <View
                                            style={
                                              {
                                                "alignItems": "center",
                                                "bottom": "50%",
                                                "justifyContent": "center",
                                                "opacity": 0.5,
                                                "top": "25%",
                                              }
                                            }
                                          >
                                            <RNSVGSvgView
                                              align="xMidYMid"
                                              bbHeight="300"
                                              bbWidth="300"
                                              focusable={false}
                                              height={300}
                                              meetOrSlice={0}
                                              minX={0}
                                              minY={0}
                                              style={
                                                [
                                                  {
                                                    "backgroundColor": "transparent",
                                                    "borderWidth": 0,
                                                  },
                                                  {
                                                    "flex": 0,
                                                    "height": 300,
                                                    "width": 300,
                                                  },
                                                ]
                                              }
                                              vbHeight={494}
                                              vbWidth={494}
                                              width={300}
                                            >
                                              <RNSVGGroup>
                                                <RNSVGPath
                                                  d="M392.4 101.2h-22.398v22.398H392.4V101.2Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199V78.802h67.199v67.199Zm-313.6-22.398h22.398v-22.398h-22.398v22.398ZM56.402 168.4h112v-112h-112v112Zm22.402-89.598h67.199v67.199H78.804V78.802Zm313.6 291.2h-22.398V392.4h22.398v-22.398Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199v-67.199h67.199v67.199Zm-156.8-291.2h22.398v-22.398h22.398V78.807h-22.398V56.409h-67.199v22.398h44.801v22.398h-22.398v44.801h22.398v-22.403Zm-22.398 22.398h-22.398v22.398h22.398v-22.398Zm-44.801-22.398v22.398h22.398v-22.398h-22.398Zm0-22.402h22.398V78.803h-22.398v22.398Zm-44.801 112h-22.398v22.398h22.398v-22.398Zm89.602-22.398v22.398h67.199v-22.398H280.41v-44.801h-22.398v44.801h-22.403Zm-22.402-22.402h-22.398v44.801h22.398v-44.801Zm-44.801 22.402h-22.398v22.398h22.398v-22.398Zm-89.598 0v22.398h44.801v-22.398H78.808Zm112 44.801v-22.398H168.41v22.398h22.398Zm-44.801 22.398h22.398v-22.398h-22.398v22.398Zm-89.602-22.398h22.398v-22.398H56.405v22.398Zm0 22.398V280.4h22.398v-22.398H56.405ZM78.807 280.4v22.398h22.398V280.4H78.807Zm-22.402 44.801v44.801h22.398v-22.398h22.398v-22.398l-44.796-.005Zm44.801 44.801h44.801v-22.398h-44.801v22.398Zm246.4-112v-22.398h-22.398v22.398h22.398Zm-156.8 112h-22.398V392.4h22.398v-22.398ZM168.404 392.4h-112v44.801h22.398v-22.398H101.2v22.398h22.398v-22.398h22.398v22.398h67.199v-22.398h-44.801l.01-22.403Zm89.602 44.801v-22.398h-22.398v22.398h22.398Zm22.398 0h22.398v-22.398h-22.398v22.398Zm0-156.8h44.801v-22.398h-22.398v-22.398h-22.398v22.398h-22.398v67.199h44.801v-22.398h-22.398l-.01-22.403Zm-67.199 134.4h22.398v-22.398h-22.398v22.398Zm-44.801-89.602h-22.398v22.398h44.801v-44.801h-22.398l-.005 22.403ZM146.006 258h-22.398v-22.398H101.21v44.801h22.398v22.398H101.21v22.398h44.801L146.006 258Zm89.602 112v22.398h22.398V370h22.398v22.398h22.398v-44.801h-67.199v-44.801h-22.398v67.199l22.403.005Zm-67.203-89.602h22.398v22.398h22.398v-22.398h22.398V258H168.4l.005 22.398Zm44.801-44.797h22.398v-22.398h-22.398v22.398Zm22.402 0v22.398h22.398v-22.398h-22.398Zm89.598 0v-22.398h-22.398v22.398h22.398Zm22.402-44.801H325.21v22.398h22.398V190.8Zm22.398 0v44.801h22.398V190.8h-22.398Zm0 89.598v22.398h22.398v-22.398h22.398V258H437.2v-44.801h-22.398v22.398h-22.398v22.398h-44.801v22.398l22.403.005ZM325.205 302.8h22.398v-22.398h-22.398V302.8ZM414.807.4v22.398h56v56h22.398V.4h-78.398Zm-392 22.402h56V.404H.409v78.398h22.398v-56Zm0 392H.409V493.2h78.398v-22.398h-56v-56Zm448 56h-56V493.2h78.398v-78.398h-22.398v56Zm-33.602-168v-22.398h-22.398v22.398h22.398Z"
                                                  fill={
                                                    {
                                                      "payload": 4294967295,
                                                      "type": 0,
                                                    }
                                                  }
                                                  propList={
                                                    [
                                                      "fill",
                                                    ]
                                                  }
                                                />
                                              </RNSVGGroup>
                                            </RNSVGSvgView>
                                          </View>
                                          <View
                                            style={
                                              {
                                                "top": "35%",
                                              }
                                            }
                                          >
                                            <View
                                              style={
                                                {
                                                  "alignSelf": "center",
                                                  "backgroundColor": "#fff",
                                                  "borderColor": "#2196F3",
                                                  "borderRadius": 8,
                                                  "borderWidth": 4,
                                                  "marginBottom": 16,
                                                  "padding": 8,
                                                }
                                              }
                                            >
                                              <View
                                                accessible={true}
                                                collapsable={false}
                                                focusable={true}
                                                onClick={[Function]}
                                                onResponderGrant={[Function]}
                                                onResponderMove={[Function]}
                                                onResponderRelease={[Function]}
                                                onResponderTerminate={[Function]}
                                                onResponderTerminationRequest={[Function]}
                                                onStartShouldSetResponder={[Function]}
                                                style={
                                                  {
                                                    "opacity": 1,
                                                  }
                                                }
                                                testID="open_add_manually"
                                              >
                                                <Text
                                                  style={
                                                    [
                                                      {
                                                        "color": "#000",
                                                        "fontSize": 20,
                                                        "lineHeight": 26,
                                                        "textAlign": "left",
                                                      },
                                                      {
                                                        "color": "#3742fa",
                                                      },
                                                      {
                                                        "textAlign": "center",
                                                      },
                                                    ]
                                                  }
                                                >
                                                  Enter Manually
                                                </Text>
                                              </View>
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </Modal>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-show-qr-code"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-manual-input"
                                transparent={true}
                                visible={false}
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderRadius": 28,
                              "bottom": 30,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "margin": 16,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 30,
                              "transform": [
                                {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 2,
                                },
                                {
                                  "borderRadius": 28,
                                  "elevation": 4,
                                },
                                false,
                              ]
                            }
                            testID="RNE_BUTTON_WRAPPER"
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": false,
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "opacity": 1,
                                }
                              }
                              testID="fab-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "#3742fa",
                                    "borderColor": "#2089dc",
                                    "borderRadius": 2,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 56,
                                    "justifyContent": "center",
                                    "padding": 16,
                                    "paddingHorizontal": 10,
                                    "width": 56,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LinkedOrganizationsScreen renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        >
                          <RCTScrollView
                            collapsable={false}
                            handlerTag={3}
                            handlerType="NativeViewGestureHandler"
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              {
                                "padding": 16,
                              }
                            }
                            waitFor={
                              [
                                {
                                  "current": null,
                                },
                              ]
                            }
                          >
                            <View>
                              <Text
                                style={
                                  {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                Here you can find all linked organizations, unlink them and add new ones.
                              </Text>
                              <View
                                style={
                                  {
                                    "borderRadius": 8,
                                    "marginBottom": 16,
                                  }
                                }
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-add-organization"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                                testID="modal-show-scanner"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-show-qr-code"
                                transparent={true}
                                visible={false}
                              />
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                testID="modal-manual-input"
                                transparent={true}
                                visible={false}
                              />
                            </View>
                          </RCTScrollView>
                        </View>
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderRadius": 28,
                              "bottom": 30,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "margin": 16,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 30,
                              "transform": [
                                {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                {
                                  "borderRadius": 2,
                                },
                                {
                                  "borderRadius": 28,
                                  "elevation": 4,
                                },
                                false,
                              ]
                            }
                            testID="RNE_BUTTON_WRAPPER"
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": false,
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "opacity": 1,
                                }
                              }
                              testID="fab-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "#3742fa",
                                    "borderColor": "#2089dc",
                                    "borderRadius": 2,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 56,
                                    "justifyContent": "center",
                                    "padding": 16,
                                    "paddingHorizontal": 10,
                                    "width": 56,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LinkedOrganizationsScreenNoOrganizer renders correctly no organizer 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
