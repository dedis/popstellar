// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LaoHomeScreen renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              style={
                Object {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            nativeID="animatedComponent"
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  nativeID="animatedComponent"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        onGestureHandlerEvent={[Function]}
                        onGestureHandlerStateChange={[Function]}
                        style={
                          Object {
                            "padding": 16,
                          }
                        }
                      >
                        <View>
                          <View
                            accessibilityRole="checkbox"
                            accessibilityState={
                              Object {
                                "checked": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#ededed",
                                "borderRadius": 3,
                                "borderWidth": 0,
                                "margin": 5,
                                "marginLeft": 0,
                                "marginRight": 0,
                                "opacity": 1,
                                "padding": 8,
                              }
                            }
                            testID="checkbox"
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                }
                              }
                            >
                              <Text />
                              <Text
                                style={
                                  Object {
                                    "color": "#43484d",
                                    "fontWeight": "bold",
                                    "marginLeft": 10,
                                    "marginRight": 10,
                                  }
                                }
                                testID="checkboxTitle"
                              >
                                Anonymous
                              </Text>
                            </View>
                          </View>
                          <Text
                            style={
                              Object {
                                "color": "#000",
                                "fontSize": 20,
                                "lineHeight": 26,
                                "marginBottom": 16,
                                "textAlign": "left",
                              }
                            }
                          >
                            You can participate in organizations and meetings anonymously by leaving this box checked. If you wish to reveal your identity to other participants in the organization, you may un-check this box and enter the information you wish to reaveal below. You must enter identity information in order to play an Organizer or Witness role in an organization.
                          </Text>
                          <Text
                            style={
                              Object {
                                "color": "#000",
                                "fontSize": 20,
                                "lineHeight": 26,
                                "marginBottom": 16,
                                "textAlign": "left",
                              }
                            }
                          >
                            You can participate in organizations and meetings anonymously by leaving this box checked. If you wish to reveal your identity to other participants in the organization, you may un-check this box and enter the information you wish to reaveal below. You must enter identity information in order to play an Organizer or Witness role in an organization.
                          </Text>
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#000",
                                  "fontSize": 20,
                                  "lineHeight": 26,
                                  "marginBottom": 16,
                                  "textAlign": "left",
                                },
                                Object {
                                  "fontWeight": "bold",
                                },
                              ]
                            }
                          >
                            Name
                          </Text>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <TextInput
                              editable={false}
                              placeholder="John Doe"
                              style={
                                Array [
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderColor": "#fff",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "padding": 8,
                                    "width": 50,
                                  },
                                  Object {
                                    "color": "gray",
                                  },
                                ]
                              }
                              value=""
                            />
                          </View>
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#000",
                                  "fontSize": 20,
                                  "lineHeight": 26,
                                  "marginBottom": 16,
                                  "textAlign": "left",
                                },
                                Object {
                                  "fontWeight": "bold",
                                },
                              ]
                            }
                          >
                            Title
                          </Text>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <TextInput
                              editable={false}
                              placeholder="LAO Organizer"
                              style={
                                Array [
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderColor": "#fff",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "padding": 8,
                                    "width": 50,
                                  },
                                  Object {
                                    "color": "gray",
                                  },
                                ]
                              }
                              value=""
                            />
                          </View>
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#000",
                                  "fontSize": 20,
                                  "lineHeight": 26,
                                  "marginBottom": 16,
                                  "textAlign": "left",
                                },
                                Object {
                                  "fontWeight": "bold",
                                },
                              ]
                            }
                          >
                            Organization
                          </Text>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <TextInput
                              editable={false}
                              placeholder="DEDIS Lab"
                              style={
                                Array [
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderColor": "#fff",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "padding": 8,
                                    "width": 50,
                                  },
                                  Object {
                                    "color": "gray",
                                  },
                                ]
                              }
                              value=""
                            />
                          </View>
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#000",
                                  "fontSize": 20,
                                  "lineHeight": 26,
                                  "marginBottom": 16,
                                  "textAlign": "left",
                                },
                                Object {
                                  "fontWeight": "bold",
                                },
                              ]
                            }
                          >
                            Email
                          </Text>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <TextInput
                              editable={false}
                              placeholder="john.doe@epfl.ch"
                              style={
                                Array [
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderColor": "#fff",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "padding": 8,
                                    "width": 50,
                                  },
                                  Object {
                                    "color": "gray",
                                  },
                                ]
                              }
                              value=""
                            />
                          </View>
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#000",
                                  "fontSize": 20,
                                  "lineHeight": 26,
                                  "marginBottom": 16,
                                  "textAlign": "left",
                                },
                                Object {
                                  "fontWeight": "bold",
                                },
                              ]
                            }
                          >
                            Phone number
                          </Text>
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <TextInput
                              editable={false}
                              placeholder="+41 12 345 67 89"
                              style={
                                Array [
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderColor": "#fff",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "padding": 8,
                                    "width": 50,
                                  },
                                  Object {
                                    "color": "gray",
                                  },
                                ]
                              }
                              value=""
                            />
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LaoHomeScreenHeader renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              style={
                Object {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            nativeID="animatedComponent"
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  nativeID="animatedComponent"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RNGestureHandlerButton
                        collapsable={false}
                        onGestureEvent={[Function]}
                        onGestureHandlerEvent={[Function]}
                        onGestureHandlerStateChange={[Function]}
                        onHandlerStateChange={[Function]}
                        rippleColor={0}
                      >
                        <View
                          accessible={true}
                          collapsable={false}
                          nativeID="animatedComponent"
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "#000",
                                "fontSize": 20,
                                "fontWeight": "500",
                                "lineHeight": 26,
                                "textAlign": "left",
                              }
                            }
                          >
                            MyLao
                          </Text>
                          <View
                            style={
                              Object {
                                "marginLeft": 4,
                              }
                            }
                          >
                            <View>
                              {"name":"ios-information-circle-outline","size":25,"color":"#000"}
                            </View>
                          </View>
                        </View>
                      </RNGestureHandlerButton>
                      <Modal
                        hardwareAccelerated={false}
                        onRequestClose={[Function]}
                        transparent={true}
                        visible={false}
                      >
                        <RNGestureHandlerButton
                          collapsable={false}
                          onGestureEvent={[Function]}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          onHandlerStateChange={[Function]}
                          rippleColor={0}
                          style={
                            Object {
                              "backgroundColor": "rgba(0,0,0,0.25)",
                              "bottom": 0,
                              "flex": 1,
                              "left": 0,
                              "padding": 32,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            nativeID="animatedComponent"
                            style={Object {}}
                          />
                        </RNGestureHandlerButton>
                        <RCTScrollView
                          collapsable={false}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          style={
                            Object {
                              "backgroundColor": "rgb(242, 242, 242)",
                              "borderRadius": 16,
                              "margin": 32,
                              "padding": 32,
                            }
                          }
                        >
                          <View>
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "center",
                                  "marginBottom": 16,
                                  "width": "100%",
                                }
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "fontWeight": "500",
                                    "lineHeight": 26,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                MyLao
                              </Text>
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                                style={
                                  Object {
                                    "position": "absolute",
                                    "right": 0,
                                  }
                                }
                                testID="modal-header-close"
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  nativeID="animatedComponent"
                                  style={
                                    Object {
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      Object {
                                        "color": "#3742fa",
                                        "fontSize": 20,
                                        "fontWeight": "500",
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      }
                                    }
                                  >
                                    Done
                                  </Text>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                            <View>
                              <Text
                                style={
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      Object {
                                        "fontWeight": "bold",
                                      },
                                    ]
                                  }
                                >
                                  Identifier
                                </Text>
                                

                                <Text>
                                  -
                                  M
                                  2
                                  5
                                  9
                                  c
                                  5
                                  J
                                  l
                                  a
                                  k
                                  L
                                  V
                                  l
                                  X
                                  B
                                  R
                                  a
                                  8
                                  9
                                  3
                                  p
                                  c
                                  E
                                  -
                                  4
                                  s
                                  7
                                  s
                                  s
                                  O
                                  8
                                  J
                                  v
                                  5
                                  g
                                  X
                                  O
                                  v
                                  t
                                  r
                                  e
                                  E
                                  =
                                </Text>
                              </Text>
                              <Text
                                style={
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      Object {
                                        "fontWeight": "bold",
                                      },
                                    ]
                                  }
                                >
                                  Your role
                                </Text>
                                

                                <Text>
                                  Attendee
                                </Text>
                              </Text>
                              <Text
                                style={
                                  Object {
                                    "color": "#000",
                                    "fontSize": 20,
                                    "lineHeight": 26,
                                    "marginBottom": 16,
                                    "textAlign": "left",
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#000",
                                        "fontSize": 20,
                                        "lineHeight": 26,
                                        "textAlign": "left",
                                      },
                                      Object {
                                        "fontWeight": "bold",
                                      },
                                    ]
                                  }
                                >
                                  You are currently connected to
                                </Text>
                                

                                <Text>
                                  
                                </Text>
                              </Text>
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                                style={
                                  Object {
                                    "marginBottom": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  nativeID="animatedComponent"
                                  style={
                                    Object {
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "#3742fa",
                                          "borderColor": "#3742fa",
                                          "borderRadius": 16,
                                          "borderWidth": 1,
                                          "padding": 8,
                                        },
                                      ]
                                    }
                                  >
                                    <Text
                                      style={
                                        Array [
                                          Object {
                                            "color": "#000",
                                            "fontSize": 20,
                                            "lineHeight": 26,
                                            "textAlign": "left",
                                          },
                                          Object {
                                            "textAlign": "center",
                                          },
                                          Object {
                                            "color": "#fff",
                                          },
                                        ]
                                      }
                                    >
                                      Add connection
                                    </Text>
                                  </View>
                                </View>
                              </RNGestureHandlerButton>
                              <RNGestureHandlerButton
                                collapsable={false}
                                onGestureEvent={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                onHandlerStateChange={[Function]}
                                rippleColor={0}
                                style={
                                  Object {
                                    "marginBottom": 16,
                                  }
                                }
                              >
                                <View
                                  accessible={true}
                                  collapsable={false}
                                  nativeID="animatedComponent"
                                  style={
                                    Object {
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "#3742fa",
                                          "borderColor": "#3742fa",
                                          "borderRadius": 16,
                                          "borderWidth": 1,
                                          "padding": 8,
                                        },
                                      ]
                                    }
                                  >
                                    <Text
                                      style={
                                        Array [
                                          Object {
                                            "color": "#000",
                                            "fontSize": 20,
                                            "lineHeight": 26,
                                            "textAlign": "left",
                                          },
                                          Object {
                                            "textAlign": "center",
                                          },
                                          Object {
                                            "color": "#fff",
                                          },
                                        ]
                                      }
                                    >
                                      Disconnect
                                    </Text>
                                  </View>
                                </View>
                              </RNGestureHandlerButton>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`LaoHomeScreenHeaderRight renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              style={
                Object {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            nativeID="animatedComponent"
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  nativeID="animatedComponent"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MockScreen
                </Text>
              </View>
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flex": 1,
                            "flexDirection": "row",
                          }
                        }
                      >
                        <RNGestureHandlerButton
                          collapsable={false}
                          onGestureEvent={[Function]}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          onHandlerStateChange={[Function]}
                          rippleColor={0}
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            nativeID="animatedComponent"
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View>
                              {"name":"ios-qr-code","size":25,"color":"#8E8E8E"}
                            </View>
                          </View>
                        </RNGestureHandlerButton>
                        <RNGestureHandlerButton
                          collapsable={false}
                          onGestureEvent={[Function]}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          onHandlerStateChange={[Function]}
                          rippleColor={0}
                          style={
                            Object {
                              "marginLeft": 16,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            nativeID="animatedComponent"
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View>
                              {"name":"ios-notifications","size":25,"color":"#8E8E8E"}
                            </View>
                          </View>
                        </RNGestureHandlerButton>
                        <Modal
                          hardwareAccelerated={false}
                          onRequestClose={[Function]}
                          transparent={true}
                          visible={false}
                        >
                          <RNGestureHandlerButton
                            collapsable={false}
                            onGestureEvent={[Function]}
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            onHandlerStateChange={[Function]}
                            rippleColor={0}
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0.25)",
                                "bottom": 0,
                                "flex": 1,
                                "left": 0,
                                "padding": 32,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              accessible={true}
                              collapsable={false}
                              nativeID="animatedComponent"
                              style={Object {}}
                            />
                          </RNGestureHandlerButton>
                          <RCTScrollView
                            collapsable={false}
                            onGestureHandlerEvent={[Function]}
                            onGestureHandlerStateChange={[Function]}
                            style={
                              Object {
                                "backgroundColor": "rgb(242, 242, 242)",
                                "borderRadius": 16,
                                "margin": 32,
                                "padding": 32,
                              }
                            }
                          >
                            <View>
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "marginBottom": 16,
                                    "width": "100%",
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "color": "#000",
                                      "fontSize": 20,
                                      "fontWeight": "500",
                                      "lineHeight": 26,
                                      "textAlign": "left",
                                    }
                                  }
                                >
                                  Connection QR Code
                                </Text>
                                <RNGestureHandlerButton
                                  collapsable={false}
                                  onGestureEvent={[Function]}
                                  onGestureHandlerEvent={[Function]}
                                  onGestureHandlerStateChange={[Function]}
                                  onHandlerStateChange={[Function]}
                                  rippleColor={0}
                                  style={
                                    Object {
                                      "position": "absolute",
                                      "right": 0,
                                    }
                                  }
                                  testID="modal-header-close"
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    nativeID="animatedComponent"
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Text
                                      style={
                                        Object {
                                          "color": "#3742fa",
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                          "lineHeight": 26,
                                          "textAlign": "left",
                                        }
                                      }
                                    >
                                      Done
                                    </Text>
                                  </View>
                                </RNGestureHandlerButton>
                              </View>
                              <View>
                                <View
                                  style={
                                    Object {
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  [QrCode {"value":"{\\"lao\\":\\"-M259c5JlakLVlXBRa893pcE-4s7ssO8Jv5gXOvtreE=\\"}","size":256,"style":{"height":"auto","maxWidth":"300px","width":"100%"},"viewBox":"0 0 256 256"}]
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                        </Modal>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
