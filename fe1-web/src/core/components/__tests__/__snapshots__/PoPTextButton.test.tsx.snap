// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PoPButton renders correctly without disabled 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "marginBottom": 16,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    handlerTag={1}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Object {
        "marginBottom": 16,
      }
    }
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#3742fa",
              "borderColor": "#3742fa",
              "borderRadius": 16,
              "borderWidth": 1,
              "padding": 8,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "textAlign": "left",
              },
              Object {
                "textAlign": "center",
              },
              Object {
                "color": "#fff",
              },
            ]
          }
        >
          I am a wide button
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;
