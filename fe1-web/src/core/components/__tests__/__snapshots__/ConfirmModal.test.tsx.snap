// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfirmModal disappears correctly after dismissing 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    handlerTag={9}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Object {
        "backgroundColor": "rgba(0,0,0,0.25)",
        "bottom": 0,
        "flex": 1,
        "left": 0,
        "padding": 32,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={Object {}}
    />
  </RNGestureHandlerButton>
  <RCTScrollView
    collapsable={false}
    handlerTag={10}
    handlerType="NativeViewGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "rgb(242, 242, 242)",
        "borderRadius": 8,
        "margin": 32,
        "padding": 32,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 16,
            "width": "100%",
          }
        }
      >
        <View />
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#000",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 26,
              "textAlign": "left",
            }
          }
        >
          Title
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="modal-header-close"
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={11}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View>
                {"name":"ios-close","size":25,"color":"#000"}
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#000",
            "fontSize": 20,
            "lineHeight": 26,
            "marginBottom": 16,
            "textAlign": "left",
          }
        }
      >
        Description
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginBottom": 16,
          }
        }
        testID="confirm-modal-confirm"
      >
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={12}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Object {
              "marginBottom": 16,
            }
          }
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#3742fa",
                    "borderColor": "#3742fa",
                    "borderRadius": 8,
                    "borderWidth": 1,
                    "padding": 8,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 20,
                      "lineHeight": 26,
                      "textAlign": "left",
                    },
                    Object {
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#fff",
                    },
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </RCTScrollView>
</Modal>
`;

exports[`ConfirmModal renders correctly 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    handlerTag={1}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Object {
        "backgroundColor": "rgba(0,0,0,0.25)",
        "bottom": 0,
        "flex": 1,
        "left": 0,
        "padding": 32,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={Object {}}
    />
  </RNGestureHandlerButton>
  <RCTScrollView
    collapsable={false}
    handlerTag={2}
    handlerType="NativeViewGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "rgb(242, 242, 242)",
        "borderRadius": 8,
        "margin": 32,
        "padding": 32,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 16,
            "width": "100%",
          }
        }
      >
        <View />
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#000",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 26,
              "textAlign": "left",
            }
          }
        >
          Title
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="modal-header-close"
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={3}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View>
                {"name":"ios-close","size":25,"color":"#000"}
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#000",
            "fontSize": 20,
            "lineHeight": 26,
            "marginBottom": 16,
            "textAlign": "left",
          }
        }
      >
        Description
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginBottom": 16,
          }
        }
        testID="confirm-modal-confirm"
      >
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={4}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Object {
              "marginBottom": 16,
            }
          }
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#3742fa",
                    "borderColor": "#3742fa",
                    "borderRadius": 8,
                    "borderWidth": 1,
                    "padding": 8,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 20,
                      "lineHeight": 26,
                      "textAlign": "left",
                    },
                    Object {
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#fff",
                    },
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </RCTScrollView>
</Modal>
`;

exports[`ConfirmModal renders correctly with text input 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    handlerTag={5}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Object {
        "backgroundColor": "rgba(0,0,0,0.25)",
        "bottom": 0,
        "flex": 1,
        "left": 0,
        "padding": 32,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={Object {}}
    />
  </RNGestureHandlerButton>
  <RCTScrollView
    collapsable={false}
    handlerTag={6}
    handlerType="NativeViewGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "rgb(242, 242, 242)",
        "borderRadius": 8,
        "margin": 32,
        "padding": 32,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 16,
            "width": "100%",
          }
        }
      >
        <View />
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#000",
              "fontSize": 20,
              "fontWeight": "500",
              "lineHeight": 26,
              "textAlign": "left",
            }
          }
        >
          Title
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="modal-header-close"
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={7}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View>
                {"name":"ios-close","size":25,"color":"#000"}
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#000",
            "fontSize": 20,
            "lineHeight": 26,
            "marginBottom": 16,
            "textAlign": "left",
          }
        }
      >
        Description
      </Text>
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <TextInput
          editable={true}
          onChangeText={[Function]}
          placeholder=""
          placeholderTextColor="#8E8E8E"
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "marginBottom": 16,
                "textAlign": "left",
              },
              Object {
                "backgroundColor": "#fff",
                "borderColor": "#fff",
                "borderRadius": 8,
                "borderWidth": 1,
                "flex": 1,
                "padding": 8,
                "width": 50,
              },
            ]
          }
          testID="confirm-modal-input"
          value=""
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginBottom": 16,
          }
        }
        testID="confirm-modal-confirm"
      >
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={8}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Object {
              "marginBottom": 16,
            }
          }
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#3742fa",
                    "borderColor": "#3742fa",
                    "borderRadius": 8,
                    "borderWidth": 1,
                    "padding": 8,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 20,
                      "lineHeight": 26,
                      "textAlign": "left",
                    },
                    Object {
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#fff",
                    },
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </RCTScrollView>
</Modal>
`;
