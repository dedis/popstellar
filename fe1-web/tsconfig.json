{
  "compilerOptions": {
    "experimentalDecorators": true,
    "target": "esnext",                       /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "lib": [                                  /* Specify library files to be included in the compilation. */
      "es6",
      "DOM"
    ],
    "allowJs": true,                          /* Allow javascript files to be compiled. */
    "jsx": "react",                           /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "noEmit": true,                           /* Do not emit outputs. */
    "isolatedModules": true,                  /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    "strict": true,                           /* Enable all strict type-checking options. */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": ".",                           /* Base directory to resolve non-absolute module names. */
    "paths": {                                /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      "*": [
        "*"
      ],
      "test_data/*": [
        "../tests/data/*"
      ],
      "protocol/*": [
        "../protocol/*"
      ],
    },
    "rootDirs": [],                           /* List of root folders whose combined content represents the structure of the project at runtime. */
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "resolveJsonModule": true,                /* Enables importing JSON modules */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
  },
  "include": [
    "src",
    "../tests/data/**/*.json",
    "../protocol/**/*.json"
  ],
  "exclude": [
    "node_modules",
    "web-build",
    ".expo",
    "coverage",
    "dist",
    "babel.config.js",
    "metro.config.js",
    "jest.config.js",
    "webpack.config.js"
  ],
  "typedocOptions": {
    "entryPoints": ["App.tsx"],
    "out": "tsdocs"
  },
  "extends": "expo/tsconfig.base"
}
