// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInputChirp renders correctly when writing less than 300 chars 1`] = `
<View
  style={
    Object {
      "borderColor": "gray",
      "borderWidth": 1,
      "flexDirection": "row",
      "padding": 10,
      "width": 600,
    }
  }
>
  <View
    style={
      Object {
        "width": 60,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "black",
            "fontSize": 40,
          },
          undefined,
          Object {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <TextInput
      multiline={true}
      numberOfLines={5}
      onChangeText={[Function]}
      placeholder="Your chirp"
      selectTextOnFocus={true}
      style={
        Object {
          "alignContent": "flex-end",
          "borderColor": "gray",
          "borderWidth": 1,
          "fontSize": 18,
          "padding": 10,
          "width": 520,
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "fontSize": 18,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 25,
            "marginHorizontal": 10,
            "textAlign": "center",
          }
        }
      >
        287
      </Text>
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            disabled={false}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Publish
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`TextInputChirp renders correctly when writing more than 300 chars 1`] = `
<View
  style={
    Object {
      "borderColor": "gray",
      "borderWidth": 1,
      "flexDirection": "row",
      "padding": 10,
      "width": 600,
    }
  }
>
  <View
    style={
      Object {
        "width": 60,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "black",
            "fontSize": 40,
          },
          undefined,
          Object {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <TextInput
      multiline={true}
      numberOfLines={5}
      onChangeText={[Function]}
      placeholder="Your chirp"
      selectTextOnFocus={true}
      style={
        Object {
          "alignContent": "flex-end",
          "borderColor": "gray",
          "borderWidth": 1,
          "fontSize": 18,
          "padding": 10,
          "width": 520,
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "fontSize": 18,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "red",
            "fontSize": 25,
            "marginHorizontal": 10,
            "textAlign": "center",
          }
        }
      >
        -3
      </Text>
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            disabled={true}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#cdcdcd",
                },
              ]
            }
          >
            Publish
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`TextInputChirp renders correctly with placeholder 1`] = `
<View
  style={
    Object {
      "borderColor": "gray",
      "borderWidth": 1,
      "flexDirection": "row",
      "padding": 10,
      "width": 600,
    }
  }
>
  <View
    style={
      Object {
        "width": 60,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "black",
            "fontSize": 40,
          },
          undefined,
          Object {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <TextInput
      multiline={true}
      numberOfLines={5}
      onChangeText={[Function]}
      placeholder="Placeholder"
      selectTextOnFocus={true}
      style={
        Object {
          "alignContent": "flex-end",
          "borderColor": "gray",
          "borderWidth": 1,
          "fontSize": 18,
          "padding": 10,
          "width": 520,
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "fontSize": 18,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 25,
            "marginHorizontal": 10,
            "textAlign": "center",
          }
        }
      >
        300
      </Text>
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            disabled={true}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#cdcdcd",
                },
              ]
            }
          >
            Publish
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`TextInputChirp renders correctly without placeholder 1`] = `
<View
  style={
    Object {
      "borderColor": "gray",
      "borderWidth": 1,
      "flexDirection": "row",
      "padding": 10,
      "width": 600,
    }
  }
>
  <View
    style={
      Object {
        "width": 60,
      }
    }
  >
    <Text />
  </View>
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <TextInput
      multiline={true}
      numberOfLines={5}
      onChangeText={[Function]}
      placeholder="Your chirp"
      selectTextOnFocus={true}
      style={
        Object {
          "alignContent": "flex-end",
          "borderColor": "gray",
          "borderWidth": 1,
          "fontSize": 18,
          "padding": 10,
          "width": 520,
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "fontSize": 18,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontSize": 25,
            "marginHorizontal": 10,
            "textAlign": "center",
          }
        }
      >
        300
      </Text>
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            disabled={true}
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#cdcdcd",
                },
              ]
            }
          >
            Publish
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
